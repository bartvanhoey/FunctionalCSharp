{
  "FunctionalCSharp.dll": {
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Program.cs": {
      "Program": {
        "System.Void Program::<Main>$(System.String[])": {
          "Lines": {
            "9": 0,
            "10": 0,
            "12": 0,
            "13": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "28": 0,
            "30": 0,
            "32": 0,
            "34": 0,
            "35": 0,
            "37": 0,
            "38": 0,
            "43": 0,
            "44": 0,
            "50": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\bartv\\.nuget\\packages\\microsoft.net.test.sdk\\17.12.0\\build\\netcoreapp3.1\\Microsoft.NET.Test.Sdk.Program.cs": {
      "AutoGeneratedProgram": {
        "System.Void AutoGeneratedProgram::Main(System.String[])": {
          "Lines": {
            "4": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Extensions\\CollectionExtensions.cs": {
      "FunctionalCSharp.Extensions.AppCollectionExtensions": {
        "System.Boolean FunctionalCSharp.Extensions.AppCollectionExtensions::IsNullOrEmpty(System.Collections.Generic.ICollection`1<T>)": {
          "Lines": {
            "6": 0
          },
          "Branches": [
            {
              "Line": 6,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 6,
              "Offset": 1,
              "EndOffset": 14,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Extensions.AppCollectionExtensions::AddIfNotContains(System.Collections.Generic.ICollection`1<T>,T)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "17": 0,
            "18": 0,
            "19": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 29,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<T> FunctionalCSharp.Extensions.AppCollectionExtensions::AddIfNotContains(System.Collections.Generic.ICollection`1<T>,System.Collections.Generic.IEnumerable`1<T>)": {
          "Lines": {
            "22": 0,
            "23": 0,
            "25": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "38": 0,
            "39": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 83,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 55,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 83,
              "EndOffset": 85,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Extensions.AppCollectionExtensions::AddIfNotContains(System.Collections.Generic.ICollection`1<T>,System.Func`2<T,System.Boolean>,System.Func`1<T>)": {
          "Lines": {
            "42": 0,
            "44": 0,
            "45": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "52": 0,
            "53": 0,
            "54": 0
          },
          "Branches": [
            {
              "Line": 47,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 34,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IList`1<T> FunctionalCSharp.Extensions.AppCollectionExtensions::RemoveAll(System.Collections.Generic.ICollection`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "57": 0,
            "58": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "65": 0,
            "66": 0
          },
          "Branches": [
            {
              "Line": 60,
              "Offset": 49,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Extensions\\GenericExtensions.cs": {
      "FunctionalCSharp.Extensions.GenericExtensions": {
        "System.Void FunctionalCSharp.Extensions.GenericExtensions::Dump(T)": {
          "Lines": {
            "5": 0
          },
          "Branches": [
            {
              "Line": 5,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 5,
              "Offset": 6,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Extensions\\UsingExtended.cs": {
      "FunctionalCSharp.Extensions.UsingExtended": {
        "TResult FunctionalCSharp.Extensions.UsingExtended::Using(System.Func`1<TDisposable>,System.Func`2<TDisposable,TResult>)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Extensions.UsingExtended/<UsingAsync>d__1`2": {
        "System.Void FunctionalCSharp.Extensions.UsingExtended/<UsingAsync>d__1`2::MoveNext()": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Extensions\\YumbaFunctionalExtensions.cs": {
      "FunctionalCSharp.Extensions.YumbaFunctionalExtensions": {
        "Tr FunctionalCSharp.Extensions.YumbaFunctionalExtensions::Using(TDisposable,System.Func`2<TDisposable,Tr>)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": []
        },
        "System.ValueTuple FunctionalCSharp.Extensions.YumbaFunctionalExtensions::Unit()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module8TestingAndDebugging\\DebuggingLinq.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module8TestingAndDebugging.DebuggingLinq": {
        "System.Collections.Generic.List`1<System.String> FunctionalCSharp.Courses.MoreEffectiveLinq.Module8TestingAndDebugging.DebuggingLinq::TrySelectExample()": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.MoreEffectiveLinq.Module8TestingAndDebugging.DebuggingLinq::DownloadAsString(System.String)": {
          "Lines": {
            "28": 0,
            "30": 0,
            "32": 0,
            "33": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Int32> FunctionalCSharp.Courses.MoreEffectiveLinq.Module8TestingAndDebugging.DebuggingLinq::ConvertNumbers(System.Collections.Generic.IEnumerable`1<System.Int32>)": {
          "Lines": {
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MoreEffectiveLinq.Module8TestingAndDebugging.DebuggingLinq::PeekMethodExample()": {
          "Lines": {
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "56": 0,
            "57": 0,
            "59": 0,
            "60": 0
          },
          "Branches": [
            {
              "Line": 57,
              "Offset": 266,
              "EndOffset": 207,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 266,
              "EndOffset": 268,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module5ExtendingLinq\\MyLinqExtensions.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module5ExtendingLinq.MyLinqExtensions": {
        "System.TimeSpan FunctionalCSharp.Courses.MoreEffectiveLinq.Module5ExtendingLinq.MyLinqExtensions::Sum(System.Collections.Generic.IEnumerable`1<System.TimeSpan>)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.MoreEffectiveLinq.Module5ExtendingLinq.MyLinqExtensions::StringConcat(System.Collections.Generic.IEnumerable`1<System.String>,System.String)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<TKey,System.Int32>> FunctionalCSharp.Courses.MoreEffectiveLinq.Module5ExtendingLinq.MyLinqExtensions::CountBy(System.Collections.Generic.IEnumerable`1<TSource>,System.Func`2<TSource,TKey>)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "26": 0,
            "27": 0,
            "29": 0,
            "30": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 26,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 134,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 86,
              "EndOffset": 117,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 134,
              "EndOffset": 136,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module4CleanAndReadableCode\\BookWithMostPagesChallenge.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.BookWithMostPagesChallenge": {
        "System.String FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.BookWithMostPagesChallenge::FindBookWithMostPages()": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "14": 0,
            "15": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 12,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module4CleanAndReadableCode\\CleanAndReadableLinqCode.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.CleanAndReadableLinqCode": {
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.PlayerAge> FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.CleanAndReadableLinqCode::GetPlayerAge(System.String)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.CleanAndReadableLinqCode::ParsDob(System.String)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module4CleanAndReadableCode\\DateTimeExtensions.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.DateTimeExtensions": {
        "System.Int32 FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.DateTimeExtensions::CalculateAge(System.DateTime)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 46,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module4CleanAndReadableCode\\PlayerAge.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.PlayerAge": {
        "System.String FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.PlayerAge::get_Name()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.PlayerAge::get_Age()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MoreEffectiveLinq.Module4CleanAndReadableCode.PlayerAge::.ctor(System.String,System.Int32)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module3PowerOfPipelines\\Chapter4MoreEffectiveLinq.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.Chapter4MoreEffectiveLinq": {
        "System.String FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.Chapter4MoreEffectiveLinq::GetFilePath()": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.YileInfo> FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.Chapter4MoreEffectiveLinq::SearchInCsvFile(System.String,System.String)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<System.String> FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.Chapter4MoreEffectiveLinq::GetDistinctLicenseNamesFromCsvFile()": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MoreEffectiveLinq\\Module3PowerOfPipelines\\MyFileInfo.cs": {
      "FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.YileInfo": {
        "System.String FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.YileInfo::get_File()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.YileInfo::get_Text()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.YileInfo::get_LineNumber()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MoreEffectiveLinq.Module3PowerOfPipelines.YileInfo::.ctor(System.String,System.String,System.Int32)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\Amount.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount": {
        "System.Decimal FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount::get_Value()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount::On(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money> FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount::Take(System.Decimal)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount::Zero(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount::.ctor(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency,System.Decimal)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 22,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\BankCard.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.BankCard": {
        "System.DateTime FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.BankCard::get_ValidBefore()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.BankCard::get_Balance()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.BankCard::GetAvailableAmount(System.Decimal,System.DateTime)": {
          "Lines": {
            "15": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.BankCard::.ctor(System.DateTime,System.Decimal)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\Currency.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency": {
        "System.String FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::get_Symbol()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::get_Usd()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::get_Eur()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::get_Jpy()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::Equals(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 10,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 22,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 30,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::Equals(System.Object)": {
          "Lines": {
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 19,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 42,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::GetHashCode()": {
          "Lines": {
            "30": 0
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::op_Equality(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "33": 0,
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": [
            {
              "Line": 35,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 2,
              "EndOffset": 7,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 5,
              "EndOffset": 7,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 8,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 5,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::op_Inequality(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency::.ctor(System.String)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\Date.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date": {
        "System.DateTime FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::get_Value()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::Equals(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 19,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::CompareTo(System.DateTime)": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::Equals(System.Object)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 19,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 44,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::GetHashCode()": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::op_Equality(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date)": {
          "Lines": {
            "36": 0,
            "37": 0
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 1,
              "EndOffset": 6,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 4,
              "EndOffset": 6,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 7,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 4,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::op_Inequality(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date)": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date)": {
          "Lines": {
            "42": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month)": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp)": {
          "Lines": {
            "48": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date::.ctor(System.Int32,System.Int32,System.Int32)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\EmptyMoney.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.EmptyMoney": {
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.EmptyMoney::On(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money> FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.EmptyMoney::Take(System.Decimal)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.EmptyMoney::.ctor(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\MoneyEnumerableExtensions.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.MoneyEnumerableExtensions": {
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money> FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.MoneyEnumerableExtensions::On(System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money>,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.SpecificMoney> FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.MoneyEnumerableExtensions::Of(System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money>,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.MoneyEnumerableExtensions/<Take>d__2": {
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.MoneyEnumerableExtensions/<Take>d__2::MoveNext()": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 213,
              "EndOffset": 77,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 213,
              "EndOffset": 218,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\Month.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month": {
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::get_Value()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::Equals(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 15,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::CompareTo(System.DateTime)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::Equals(System.Object)": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 19,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 31,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::GetHashCode()": {
          "Lines": {
            "29": 0,
            "30": 0,
            "31": 0
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 13,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::op_Equality(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month)": {
          "Lines": {
            "34": 0,
            "35": 0
          },
          "Branches": [
            {
              "Line": 34,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 1,
              "EndOffset": 6,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 4,
              "EndOffset": 6,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 7,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 4,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::op_Inequality(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month)": {
          "Lines": {
            "37": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp)": {
          "Lines": {
            "40": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date)": {
          "Lines": {
            "43": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month)": {
          "Lines": {
            "46": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month::.ctor(System.Int32,System.Int32)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\SpecificMoney.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.SpecificMoney": {
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.SpecificMoney::get_Currency()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.SpecificMoney FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.SpecificMoney::Of(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 13,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.SpecificMoney::.ctor(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\Timestamp.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp": {
        "System.DateTime FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp::get_UtcTime()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp::get_Now()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp::CompareTo(System.DateTime)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Date)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp::CompareTo(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Month)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Timestamp::.ctor(System.DateTime)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 23,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\ObjectFilters\\MoneyDemo\\Wallet.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Wallet": {
        "System.Collections.Generic.IList`1<FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money> FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Wallet::get_Content()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Wallet::Add(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Money)": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Wallet::Charge(FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Currency,FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.ObjectFilters.MoneyDemo.Amount)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "20": 0,
            "22": 0,
            "23": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\MakingYourCSharpCodeMoreFunctional\\Memoization\\Memoization.cs": {
      "FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.Memoization.Memoization": {
        "System.Int64 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.Memoization.Memoization::NaiveFibonacci(System.Int32)": {
          "Lines": {
            "7": 0
          },
          "Branches": [
            {
              "Line": 7,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 2,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int64 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.Memoization.Memoization::DynamicFibonacci(System.Int32)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 34,
              "EndOffset": 3,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 63,
              "EndOffset": 84,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 53,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Int64 FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.Memoization.Memoization::ForwardFibonacci(System.Int32)": {
          "Lines": {
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 69,
              "EndOffset": 3,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 69,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.MakingYourCSharpCodeMoreFunctional.Memoization.Memoization::.cctor()": {
          "Lines": {
            "9": 0,
            "21": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module4GoingWithTheFlow\\MethodChaining\\StreamFactory.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.StreamFactory": {
        "System.IO.Stream FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.StreamFactory::GetDoctors()": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "13": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "19": 0,
            "20": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module4GoingWithTheFlow\\MethodChaining\\With\\StringBuilderExtensions.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.With.StringBuilderExtensions": {
        "System.Text.StringBuilder FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.With.StringBuilderExtensions::AppendWhen(System.Text.StringBuilder,System.Func`1<System.Boolean>,System.Func`2<System.Text.StringBuilder,System.Text.StringBuilder>)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 6,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Text.StringBuilder FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.With.StringBuilderExtensions::AppendSequence(System.Text.StringBuilder,System.Collections.Generic.IEnumerable`1<T>,System.Func`3<System.Text.StringBuilder,T,System.Text.StringBuilder>)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Text.StringBuilder FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.With.StringBuilderExtensions::AppendFormattedLine(System.Text.StringBuilder,System.String,System.Object[])": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module4GoingWithTheFlow\\MethodChaining\\With\\WithMethodChaining.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.With.WithMethodChaining": {
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.With.WithMethodChaining::GetSelectBoxWithMethodChaining()": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Func`2<System.Collections.Generic.IDictionary`2<System.Int32,System.String>,System.String> FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.With.WithMethodChaining::BuildSelectBox(System.String,System.Boolean)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 37,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module4GoingWithTheFlow\\MethodChaining\\Without\\WithoutMethodChaining.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.Without.WithoutMethodChaining": {
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.Without.WithoutMethodChaining::GetSelectBoxWithoutMethodChaining()": {
          "Lines": {
            "8": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "26": 0,
            "28": 0,
            "30": 0,
            "31": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module4GoingWithTheFlow.MethodChaining.Without.WithoutMethodChaining::BuildSelectBox(System.Collections.Generic.IDictionary`2<System.Int32,System.String>,System.String,System.Boolean)": {
          "Lines": {
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "50": 0,
            "52": 0,
            "53": 0
          },
          "Branches": [
            {
              "Line": 39,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 30,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 109,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 109,
              "EndOffset": 111,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module3_FunctionalThinking\\Calculator.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module3_FunctionalThinking.Calculator": {
        "System.Func`3<System.Decimal,System.Decimal,System.Decimal> FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module3_FunctionalThinking.Calculator::GetOperation(System.Char)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "15": 0,
            "16": 0
          },
          "Branches": [
            {
              "Line": 7,
              "Offset": 9,
              "EndOffset": 43,
              "Path": 2,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 9,
              "EndOffset": 77,
              "Path": 4,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 9,
              "EndOffset": 111,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 9,
              "EndOffset": 145,
              "Path": 6,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 9,
              "EndOffset": 179,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 9,
              "EndOffset": 179,
              "Path": 3,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 9,
              "EndOffset": 179,
              "Path": 5,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Decimal FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module3_FunctionalThinking.Calculator::Eval(System.String)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module2_ExpressYourself\\ConvertingStatementsToExpressions.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.ConvertingStatementsToExpressions/<>c": {
        "System.Net.Http.HttpClient FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.ConvertingStatementsToExpressions/<>c::<GetTotalPages_Functional>b__1_0()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.ConvertingStatementsToExpressions/<>c/<<GetTotalPages_Functional>b__1_1>d": {
        "System.Void FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.ConvertingStatementsToExpressions/<>c/<<GetTotalPages_Functional>b__1_1>d::MoveNext()": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.ConvertingStatementsToExpressions/<GetTotalPages_NonFunctional>d__0": {
        "System.Void FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.ConvertingStatementsToExpressions/<GetTotalPages_NonFunctional>d__0::MoveNext()": {
          "Lines": {
            "11": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 261,
              "EndOffset": 263,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 261,
              "EndOffset": 267,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 283,
              "EndOffset": 285,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 283,
              "EndOffset": 289,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module2_ExpressYourself\\DateRange.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRange": {
        "System.DateTime FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRange::get_Start()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRange::get_End()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRange::DateIsInRange(System.DateTime)": {
          "Lines": {
            "7": 0
          },
          "Branches": [
            {
              "Line": 7,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 16,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module2_ExpressYourself\\DateRangeFunctional.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRangeFunctional": {
        "System.DateTime FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRangeFunctional::get_Start()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRangeFunctional::get_End()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRangeFunctional::DateIsInRange(System.DateTime)": {
          "Lines": {
            "16": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 16,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRangeFunctional FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRangeFunctional::Slide(System.Int32)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.DateRangeFunctional::.ctor(System.DateTime,System.DateTime)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": [
            {
              "Line": 7,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 24,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module2_ExpressYourself\\JsonToXmlHelper.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.JsonToXmlHelper": {
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.JsonToXmlHelper::JsonToXml(System.String)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.JsonToXmlHelper::ObjectToXml(T)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module2_ExpressYourself\\MySingleton.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.MySingleton": {
        "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.MySingleton FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.MySingleton::get_MySingletonInstance()": {
          "Lines": {
            "6": 0
          },
          "Branches": [
            {
              "Line": 6,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 6,
              "Offset": 6,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.MySingleton::ToString()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module2_ExpressYourself\\PhotoObject.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.PhotoObject": {
        "System.Int32 FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.PhotoObject::get_AlbumId()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.PhotoObject::get_Id()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.PhotoObject::get_Title()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.PhotoObject::get_Url()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.PhotoObject::get_ThumbnailUrl()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\FunctionalProgrammingWithCSharp\\Module2_ExpressYourself\\XDocumentExtensions.cs": {
      "FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.XDocumentExtensions": {
        "System.String FunctionalCSharp.Courses.FunctionalProgrammingWithCSharp.Module2_ExpressYourself.XDocumentExtensions::GetTotalPages(System.Xml.Linq.XDocument)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 29,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\BeginningFunctionalProgramming\\Composition.cs": {
      "FunctionalCSharp.Courses.BeginningFunctionalProgramming.Composition": {
        "System.Void FunctionalCSharp.Courses.BeginningFunctionalProgramming.Composition::Go()": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\BeginningFunctionalProgramming\\ExpressionsVsStatements.cs": {
      "FunctionalCSharp.Courses.BeginningFunctionalProgramming.ExpressionsVsStatements": {
        "System.Void FunctionalCSharp.Courses.BeginningFunctionalProgramming.ExpressionsVsStatements::Go()": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "32": 0,
            "34": 0
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 11,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 6,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\BeginningFunctionalProgramming\\FirstClass.cs": {
      "FunctionalCSharp.Courses.BeginningFunctionalProgramming.FirstClass": {
        "System.Void FunctionalCSharp.Courses.BeginningFunctionalProgramming.FirstClass::Go()": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "30": 0,
            "31": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.BeginningFunctionalProgramming.FunctionExtensions": {
        "System.Boolean FunctionalCSharp.Courses.BeginningFunctionalProgramming.FunctionExtensions::IsActive(FunctionalCSharp.Courses.BeginningFunctionalProgramming.User)": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.BeginningFunctionalProgramming.FunctionExtensions::FirstNameLastName(FunctionalCSharp.Courses.BeginningFunctionalProgramming.User)": {
          "Lines": {
            "37": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.BeginningFunctionalProgramming.EnumerableExtensions": {
        "System.Void FunctionalCSharp.Courses.BeginningFunctionalProgramming.EnumerableExtensions::Print(System.Collections.Generic.IEnumerable`1<T>)": {
          "Lines": {
            "44": 0,
            "45": 0,
            "47": 0
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 36,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\BeginningFunctionalProgramming\\User.cs": {
      "FunctionalCSharp.Courses.BeginningFunctionalProgramming.User": {
        "System.String FunctionalCSharp.Courses.BeginningFunctionalProgramming.User::get_FirstName()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.BeginningFunctionalProgramming.User::get_LastName()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.BeginningFunctionalProgramming.User::get_Age()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.BeginningFunctionalProgramming.User::get_IsActive()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Infrastructure\\Envelope.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1": {
        "T FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1::get_Result()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1::get_ErrorMessage()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1::get_TimeGenerated()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1::.ctor(T,System.String)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1<T> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope::Ok(T)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope::Ok()": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope::Error(System.String)": {
          "Lines": {
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope::.ctor(System.String)": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Infrastructure\\Request.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Request": {
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Request::CreateResponse(System.Net.HttpStatusCode,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Request::CreateResponse(System.Net.HttpStatusCode,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer>)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Request::CreateResponse(System.Net.HttpStatusCode,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.Envelope`1<T>)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Infrastructure\\RouteAttribute.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.RouteAttribute": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Infrastructure.RouteAttribute::.ctor(System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\BusinessException.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.BusinessException": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.BusinessException::.ctor()": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.BusinessException::.ctor(System.String)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.BusinessException::.ctor(System.String,System.Exception)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.BusinessException::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::get_Name()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::get_PrimaryEmail()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::get_SecondaryEmail()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Industry FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::get_Industry()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.EmailCampaign FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::get_EmailCampaign()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.CustomerStatus FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::get_Status()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.EmailCampaign FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::GetEmailCampaign(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Industry)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 19,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 43,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::DisableEmailing()": {
          "Lines": {
            "39": 0,
            "40": 0,
            "41": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::UpdateIndustry(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Industry)": {
          "Lines": {
            "44": 0,
            "45": 0,
            "46": 0,
            "48": 0,
            "49": 0,
            "50": 0
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 12,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 12,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::CanBePromoted()": {
          "Lines": {
            "53": 0,
            "54": 0,
            "55": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::Promote()": {
          "Lines": {
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0
          },
          "Branches": [
            {
              "Line": 59,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 59,
              "Offset": 12,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::.ctor()": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer::.ctor(System.String,System.String,System.String,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Industry)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\CustomerRepository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.CustomerRepository": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Customer FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.CustomerRepository::GetByName(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.CustomerRepository::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\EmailGateway.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.EmailGateway": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.EmailGateway::SendPromotionNotification(System.String,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.CustomerStatus)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.EmailGateway::SendEmail(System.String,System.String,System.String)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\Entity.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity": {
        "System.Int64 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity::get_Id()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity::Equals(System.Object)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "12": 0,
            "13": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "21": 0,
            "22": 0,
            "24": 0,
            "25": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 14,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 26,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 53,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 65,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 84,
              "EndOffset": 86,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 84,
              "EndOffset": 90,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity::op_Equality(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 2,
              "EndOffset": 10,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 13,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 20,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 31,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity::op_Inequality(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity)": {
          "Lines": {
            "39": 0,
            "40": 0,
            "41": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity::GetHashCode()": {
          "Lines": {
            "44": 0,
            "45": 0,
            "46": 0
          },
          "Branches": []
        },
        "System.Type FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Entity::GetRealType()": {
          "Lines": {
            "49": 0,
            "51": 0,
            "52": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\Industry.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Industry": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Industry::get_Name()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\IndustryRepository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.IndustryRepository": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Industry FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.IndustryRepository::GetByName(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.IndustryRepository::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\Initer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Initer": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Initer::Init(System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\Repository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Repository`1": {
        "T FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Repository`1::GetById(System.Int64)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Repository`1::Save(T)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.Repository`1::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\SessionFactory.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory": {
        "NHibernate.ISession FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory::OpenSession()": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory::Init(System.String)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        },
        "NHibernate.ISessionFactory FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory::BuildSessionFactory(System.String)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "41": 0,
            "42": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory/OtherConversions": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory/OtherConversions::Apply(FluentNHibernate.Conventions.Instances.IOneToManyCollectionInstance)": {
          "Lines": {
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory/OtherConversions::Apply(FluentNHibernate.Conventions.Instances.IManyToOneInstance)": {
          "Lines": {
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory/TableNameConvention": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory/TableNameConvention::Apply(FluentNHibernate.Conventions.Instances.IClassInstance)": {
          "Lines": {
            "67": 0,
            "68": 0,
            "69": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory/HiLoConvention": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.SessionFactory/HiLoConvention::Apply(FluentNHibernate.Conventions.Instances.IIdentityInstance)": {
          "Lines": {
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Models\\UnitOfWork.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork::Dispose()": {
          "Lines": {
            "20": 0,
            "21": 0,
            "22": 0,
            "24": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 12,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 32,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 12,
              "EndOffset": 78,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork::Commit()": {
          "Lines": {
            "41": 0,
            "42": 0,
            "43": 0,
            "45": 0,
            "46": 0
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 12,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 12,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "T FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork::Get(System.Int64)": {
          "Lines": {
            "49": 0,
            "50": 0,
            "51": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork::SaveOrUpdate(T)": {
          "Lines": {
            "54": 0,
            "55": 0,
            "56": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork::Delete(T)": {
          "Lines": {
            "59": 0,
            "60": 0,
            "61": 0
          },
          "Branches": []
        },
        "System.Linq.IQueryable`1<T> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork::Query()": {
          "Lines": {
            "64": 0,
            "65": 0,
            "66": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork::.ctor()": {
          "Lines": {
            "10": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Controllers\\CreateCustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CreateCustomerModel": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CreateCustomerModel::get_Name()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CreateCustomerModel::get_PrimaryEmail()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CreateCustomerModel::get_SecondaryEmail()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CreateCustomerModel::get_Industry()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Controllers\\CustomerController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController": {
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::Create(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CreateCustomerModel)": {
          "Lines": {
            "26": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "40": 0,
            "41": 0,
            "43": 0,
            "44": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "54": 0
          },
          "Branches": [
            {
              "Line": 31,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 44,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 93,
              "EndOffset": 95,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 93,
              "EndOffset": 117,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::ValidateEmail(System.String,System.String)": {
          "Lines": {
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0
          },
          "Branches": [
            {
              "Line": 58,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 9,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 43,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 62,
              "Offset": 78,
              "EndOffset": 80,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 62,
              "Offset": 78,
              "EndOffset": 97,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::ValidateName(System.String)": {
          "Lines": {
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0
          },
          "Branches": [
            {
              "Line": 68,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 68,
              "Offset": 9,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 37,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::Update(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.UpdateCustomerModel)": {
          "Lines": {
            "77": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "88": 0,
            "90": 0,
            "91": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "101": 0
          },
          "Branches": [
            {
              "Line": 81,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 29,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 85,
              "Offset": 90,
              "EndOffset": 92,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 85,
              "Offset": 90,
              "EndOffset": 114,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::DisableEmailing(System.Int64)": {
          "Lines": {
            "106": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "113": 0,
            "115": 0,
            "116": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "126": 0
          },
          "Branches": [
            {
              "Line": 110,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 110,
              "Offset": 24,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::Get(System.Int64)": {
          "Lines": {
            "131": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "138": 0,
            "140": 0,
            "141": 0,
            "142": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "148": 0
          },
          "Branches": [
            {
              "Line": 135,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 135,
              "Offset": 24,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::Promote(System.Int64)": {
          "Lines": {
            "153": 0,
            "155": 0,
            "156": 0,
            "157": 0,
            "158": 0,
            "160": 0,
            "161": 0,
            "163": 0,
            "164": 0,
            "166": 0,
            "167": 0,
            "169": 0,
            "170": 0,
            "171": 0,
            "173": 0,
            "174": 0,
            "175": 0,
            "177": 0
          },
          "Branches": [
            {
              "Line": 157,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 157,
              "Offset": 24,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 160,
              "Offset": 60,
              "EndOffset": 62,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 160,
              "Offset": 60,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.CustomerController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.UnitOfWork,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Models.IEmailGateway)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\Before\\Controllers\\UpdateCustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.UpdateCustomerModel": {
        "System.Int64 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.UpdateCustomerModel::get_Id()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.Before.Controllers.UpdateCustomerModel::get_Industry()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\ValueObjects\\CustomerName.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName::get_Value()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName::Create(CSharpFunctionalExtensions.Maybe`1<System.String>)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 1,
              "EndOffset": 5,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 1,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName::GetHashCodeCore()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName::op_Explicit(System.String)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName::.ctor(System.String)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\ValueObjects\\Email.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email::get_Value()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email::CreateEmail(CSharpFunctionalExtensions.Maybe`1<System.String>)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "23": 0,
            "24": 0
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 5,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 1,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 1,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 1,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 1,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email::GetHashCodeCore()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email::op_Explicit(System.String)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email::.ctor(System.String)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\CreateCustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CreateCustomerModel": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CreateCustomerModel::get_Name()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CreateCustomerModel::get_PrimaryEmail()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CreateCustomerModel::get_SecondaryEmail()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CreateCustomerModel::get_Industry()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::get_Name()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::get_PrimaryEmail()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::get_SecondaryEmail()": {
          "Lines": {
            "15": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void modreq(System.Runtime.CompilerServices.IsExternalInit) FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::set_SecondaryEmail(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email)": {
          "Lines": {
            "16": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 2,
              "EndOffset": 7,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::get_EmailSettings()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CustomerStatus FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::get_Status()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::DisableEmailing()": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::UpdateIndustry(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry)": {
          "Lines": {
            "42": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::CanBePromoted()": {
          "Lines": {
            "44": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::Promote()": {
          "Lines": {
            "47": 0,
            "48": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0
          },
          "Branches": [
            {
              "Line": 48,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 34,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 34,
              "EndOffset": 57,
              "Path": 2,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 34,
              "EndOffset": 61,
              "Path": 3,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 34,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::.ctor()": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.CustomerName,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email,CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.ValueObjects.Email>,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry)": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 34,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 62,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\CustomerRepository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CustomerRepository": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CustomerRepository::GetByName(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CustomerRepository::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\EmailGateway.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailGateway": {
        "CSharpFunctionalExtensions.Result FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailGateway::SendPromotionNotification(System.String,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CustomerStatus)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailGateway::SendEmail(System.String,System.String,System.String)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "24": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\EmailSettings.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::get_Industry()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::get_EmailingIsDisabled()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailCampaign FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::get_EmailCampaign()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailCampaign FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::GetEmailCampaign(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 9,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 28,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 47,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 68,
              "EndOffset": 70,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 68,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::DisableEmailing()": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::UpdateIndustry(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings)": {
          "Lines": {
            "32": 0
          },
          "Branches": [
            {
              "Line": 32,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 17,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::GetHashCodeCore()": {
          "Lines": {
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.EmailSettings::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry,System.Boolean)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\Entity.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity": {
        "System.Int64 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity::get_Id()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity::Equals(System.Object)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "12": 0,
            "13": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "21": 0,
            "22": 0,
            "24": 0,
            "25": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 14,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 26,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 53,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 65,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 84,
              "EndOffset": 86,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 84,
              "EndOffset": 90,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity::op_Equality(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 2,
              "EndOffset": 10,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 13,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 20,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 31,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity::op_Inequality(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity)": {
          "Lines": {
            "39": 0,
            "40": 0,
            "41": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity::GetHashCode()": {
          "Lines": {
            "44": 0,
            "45": 0,
            "46": 0
          },
          "Branches": []
        },
        "System.Type FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Entity::GetRealType()": {
          "Lines": {
            "49": 0,
            "51": 0,
            "52": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\Industry.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry::get_Name()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry::Get(CSharpFunctionalExtensions.Maybe`1<System.String>)": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0
          },
          "Branches": [
            {
              "Line": 22,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 10,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 61,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 48,
              "EndOffset": 78,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 61,
              "EndOffset": 91,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 74,
              "EndOffset": 104,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 74,
              "EndOffset": 117,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry::.ctor(System.Int32,System.String)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry::.cctor()": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\IndustryRepository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.IndustryRepository": {
        "CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Industry> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.IndustryRepository::GetByName(System.String)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.IndustryRepository::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\Initer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Initer": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Initer::Init(System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\Repository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Repository`1": {
        "CSharpFunctionalExtensions.Maybe`1<T> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Repository`1::GetById(System.Int64)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Repository`1::Save(T)": {
          "Lines": {
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Repository`1::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\SessionFactory.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory": {
        "NHibernate.ISession FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory::OpenSession()": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory::Init(System.String)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        },
        "NHibernate.ISessionFactory FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory::BuildSessionFactory(System.String)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "41": 0,
            "42": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory/OtherConversions": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory/OtherConversions::Apply(FluentNHibernate.Conventions.Instances.IOneToManyCollectionInstance)": {
          "Lines": {
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory/OtherConversions::Apply(FluentNHibernate.Conventions.Instances.IManyToOneInstance)": {
          "Lines": {
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory/TableNameConvention": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory/TableNameConvention::Apply(FluentNHibernate.Conventions.Instances.IClassInstance)": {
          "Lines": {
            "67": 0,
            "68": 0,
            "69": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory/HiLoConvention": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.SessionFactory/HiLoConvention::Apply(FluentNHibernate.Conventions.Instances.IIdentityInstance)": {
          "Lines": {
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\UnitOfWork.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork::Dispose()": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0,
            "25": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0
          },
          "Branches": [
            {
              "Line": 22,
              "Offset": 12,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 32,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 12,
              "EndOffset": 78,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork::Commit()": {
          "Lines": {
            "42": 0,
            "43": 0,
            "44": 0,
            "46": 0,
            "47": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 12,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 12,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "CSharpFunctionalExtensions.Maybe`1<T> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork::Get(System.Int64)": {
          "Lines": {
            "50": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork::SaveOrUpdate(T)": {
          "Lines": {
            "53": 0,
            "54": 0,
            "55": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork::Delete(T)": {
          "Lines": {
            "58": 0,
            "59": 0,
            "60": 0
          },
          "Branches": []
        },
        "System.Linq.IQueryable`1<T> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork::Query()": {
          "Lines": {
            "63": 0,
            "64": 0,
            "65": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork::.ctor()": {
          "Lines": {
            "11": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Models\\UpdateCustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UpdateCustomerModel": {
        "System.Int64 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UpdateCustomerModel::get_Id()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UpdateCustomerModel::get_Industry()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Controllers\\ControllerBase.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.ControllerBase": {
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.ControllerBase::HttpError(System.String)": {
          "Lines": {
            "18": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.ControllerBase::HttpOk()": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.ControllerBase::HttpOk(T)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0
          },
          "Branches": []
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.ControllerBase::CustomerNotFound(System.Int64)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.ControllerBase::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "16": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module7_AllTogether\\After\\Controllers\\CustomerController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController": {
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController::Create(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.CreateCustomerModel)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "29": 0,
            "30": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 145,
              "EndOffset": 147,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 145,
              "EndOffset": 163,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController::Update(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UpdateCustomerModel)": {
          "Lines": {
            "44": 0,
            "45": 0,
            "46": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 7,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController::DisableEmailing(System.Int64)": {
          "Lines": {
            "56": 0,
            "57": 0,
            "58": 0,
            "60": 0,
            "62": 0,
            "63": 0
          },
          "Branches": [
            {
              "Line": 58,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 23,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 42,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController::Get(System.Int64)": {
          "Lines": {
            "68": 0,
            "69": 0,
            "70": 0,
            "72": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "83": 0,
            "84": 0
          },
          "Branches": [
            {
              "Line": 70,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 23,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController::Promote(System.Int64)": {
          "Lines": {
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.UnitOfWork,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.IEmailGateway)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "System.Net.Http.HttpResponseMessage FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Controllers.CustomerController::<Promote>b__7_3(CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module7_AllTogether.After.Models.Customer>)": {
          "Lines": {},
          "Branches": [
            {
              "Line": 94,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 94,
              "Offset": 7,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\Before\\BankAccount.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.BankAccount": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.BankAccount::RefillBalance(System.Int32,System.Decimal)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "24": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "47": 0,
            "48": 0,
            "49": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 13,
              "EndOffset": 44,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 63,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.BankAccount::IsMoneyAmountValid(System.Decimal)": {
          "Lines": {
            "51": 0
          },
          "Branches": [
            {
              "Line": 51,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 11,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.BankAccount::.ctor()": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\Before\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Customer": {
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Customer::get_Id()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Customer::get_Balance()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Customer::get_BillingInfo()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Customer::AddBalance(System.Decimal)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\Before\\Database.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Database": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Customer FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Database::GetById(System.Int32)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Database::Save(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Customer)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 22,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\Before\\Logger.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Logger": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.Logger::Log(System.String)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\Before\\PaymentGateway.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.PaymentGateway": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.PaymentGateway::ChargePayment(System.String,System.Decimal)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 22,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.Before.PaymentGateway::RollbackLastTransaction()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\After\\BankAccount.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.BankAccount": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.BankAccount::RefillBalance(System.Int32,System.Decimal)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 7,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 12,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 23,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 34,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.BankAccount::LogMessage(CSharpFunctionalExtensions.Result)": {
          "Lines": {
            "31": 0
          },
          "Branches": [
            {
              "Line": 31,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 13,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\After\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Customer": {
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Customer::get_Id()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Customer::get_Balance()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Customer::get_BillingInfo()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Customer::AddBalance(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\After\\Database.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Database": {
        "CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Customer> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Database::GetById(System.Int32)": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 18,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "CSharpFunctionalExtensions.Result FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Database::Save(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Customer)": {
          "Lines": {
            "25": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "36": 0,
            "38": 0
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 23,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\After\\Logger.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Logger": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.Logger::Log(System.String)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\After\\MoneyToCharge.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge": {
        "System.Decimal FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge::get_Value()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge::Create(System.Decimal)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 11,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 29,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 29,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 40,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge::GetHashCodeCore()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge::op_Explicit(System.Decimal)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge)": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge::.ctor(System.Decimal)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module6_ErrorsAndFailures\\After\\PaymentGateway.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.PaymentGateway": {
        "CSharpFunctionalExtensions.Result FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.PaymentGateway::ChargePayment(System.String,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.MoneyToCharge)": {
          "Lines": {
            "9": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "22": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 23,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module6_ErrorsAndFailures.After.PaymentGateway::RollbackLastTransaction()": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Customer": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Customer::get_CustomerName()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Customer::get_Email()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Customer::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\CustomerController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerController": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerController::CreateCustomer(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerModel)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "22": 0,
            "24": 0,
            "26": 0,
            "27": 0,
            "29": 0,
            "30": 0,
            "32": 0,
            "33": 0
          },
          "Branches": [
            {
              "Line": 22,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 40,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 71,
              "EndOffset": 91,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 103,
              "EndOffset": 105,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 103,
              "EndOffset": 125,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerController::Index(System.Int32)": {
          "Lines": {
            "37": 0,
            "38": 0,
            "40": 0,
            "42": 0,
            "43": 0
          },
          "Branches": [
            {
              "Line": 40,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 20,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.IDatabase)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\CustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerModel": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerModel::get_Name()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerModel::get_Email()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerModel::.ctor(System.String,System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\CustomerName.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName::get_Value()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName::Create(System.String)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 40,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName::GetHashCodeCore()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName::op_Explicit(System.String)": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerName::.ctor(System.String)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\Email.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email::get_Value()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email::CreateEmail(System.String)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 2,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 15,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 53,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 74,
              "EndOffset": 76,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 74,
              "EndOffset": 88,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email::GetHashCodeCore()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email::op_Explicit(System.String)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Email::.ctor(System.String)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\Setup\\ActionResult.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult::get_Error()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult::get_Message()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult::get_RedirectTo()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult::get_IsValid()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult::.ctor(System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult::.ctor(System.String,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\Setup\\Controller.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller::View(System.String,System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller::View(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller::HttpNotFound()": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller::View(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.CustomerModel)": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller::View()": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller::RedirectToAction(System.String)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Controller::View(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Customer)": {
          "Lines": {
            "37": 0,
            "38": 0,
            "39": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\Setup\\Database.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Database": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Database::Save(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Customer)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Customer FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.Database::GetById(System.Int32)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 7,
              "EndOffset": 14,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\Before\\Setup\\ModelState.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ModelState": {
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ModelState::get_IsValid()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ModelState::AddModelError(System.String,System.String)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.Before.Setup.ModelState::Init()": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer": {
        "CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer::get_CustomerName()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer::get_Email()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer::.ctor(CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName>,CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email>)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 17,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 39,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\CustomerController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerController": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerController::CreateCustomer(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerModel)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "20": 0,
            "22": 0,
            "23": 0,
            "25": 0,
            "26": 0,
            "28": 0,
            "29": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 40,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 71,
              "EndOffset": 91,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 103,
              "EndOffset": 105,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 103,
              "EndOffset": 125,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerController::Index(System.Int32)": {
          "Lines": {
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 35,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 21,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.IDatabase)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\CustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerModel": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerModel::get_Name()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerModel::get_Email()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerModel::.ctor(System.String,System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\CustomerName.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName::get_Value()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName::Create(System.String)": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 9,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 40,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName::GetHashCodeCore()": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName::op_Explicit(System.String)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName)": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerName::.ctor(System.String)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\Email.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email::get_Value()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email::CreateEmail(System.String)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 9,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 47,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 68,
              "EndOffset": 70,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 68,
              "EndOffset": 82,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email::GetHashCodeCore()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email::op_Explicit(System.String)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Email::.ctor(System.String)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\Setup\\ActionResult.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult::get_Error()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult::get_Message()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult::get_RedirectTo()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult::get_IsValid()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult::.ctor(System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult::.ctor(System.String,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\Setup\\Controller.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller::View(System.String,System.String)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller::View(System.String)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller::HttpNotFound()": {
          "Lines": {
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller::View(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.CustomerModel)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller::View(CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer>)": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller::RedirectToAction(System.String)": {
          "Lines": {
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Controller::View(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer)": {
          "Lines": {
            "41": 0,
            "42": 0,
            "43": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\Setup\\Database.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Database": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Database::Save(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Customer> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.Database::GetById(System.Int32)": {
          "Lines": {
            "16": 0,
            "17": 0,
            "21": 0,
            "22": 0,
            "24": 0,
            "25": 0,
            "26": 0
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 7,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module5_AvoidingNullsWithMaybe\\After\\Setup\\ModelState.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ModelState": {
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ModelState::get_IsValid()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ModelState::AddModelError(System.String,System.String)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module5_AvoidingNullsWithMaybe.After.Setup.ModelState::Init()": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\Before\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Customer": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Customer::get_Name()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Customer::get_Email()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Customer::ChangeName(System.String)": {
          "Lines": {
            "16": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 7,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 29,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Customer::ChangeEmail(System.String)": {
          "Lines": {
            "24": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 7,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 24,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 53,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Customer::.ctor(System.String,System.String)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\Before\\CustomerController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerController": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerController::CreateCustomer(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerModel)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "24": 0,
            "25": 0,
            "27": 0,
            "28": 0
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 17,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerController::Index(System.Int32)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.IDatabase)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\Before\\CustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerModel": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerModel::get_Name()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerModel::get_Email()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\Before\\Setup\\ActionResult.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult::get_Error()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult::get_Message()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult::get_RedirectTo()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult::get_IsValid()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult::.ctor(System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult::.ctor(System.String,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\Before\\Setup\\Controller.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.Controller": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.Controller::View(System.String,System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.Controller::View(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.Controller::HttpNotFound()": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.Controller::View(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.CustomerModel)": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.Controller::View()": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.Controller::RedirectToAction(System.String)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\Before\\Setup\\ModelState.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ModelState": {
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ModelState::get_IsValid()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ModelState::AddModelError(System.String,System.String)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.Before.Setup.ModelState::SetIsValidToTrue()": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\Customer.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer::get_Name()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer::get_Email()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer::ChangeName(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName)": {
          "Lines": {
            "13": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 3,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer::ChangeEmail(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email)": {
          "Lines": {
            "15": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 3,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 34,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\CustomerController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerController": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerController::CreateCustomer(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerModel)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "23": 0,
            "24": 0,
            "26": 0,
            "28": 0,
            "29": 0,
            "31": 0,
            "32": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 40,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 71,
              "EndOffset": 91,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 103,
              "EndOffset": 105,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 103,
              "EndOffset": 125,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerController::Index(System.Int32)": {
          "Lines": {
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0
          },
          "Branches": [
            {
              "Line": 37,
              "Offset": 7,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 13,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 7,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 13,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.IDatabase)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\CustomerModel.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerModel": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerModel::get_Name()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerModel::get_Email()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerModel::.ctor(System.String,System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\CustomerName.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName::get_Value()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName::Create(System.String)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 9,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 40,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName::GetHashCodeCore()": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName::op_Explicit(System.String)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerName::.ctor(System.String)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\Email.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email::get_Value()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Result`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email::Create(System.String)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 9,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 47,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 73,
              "EndOffset": 75,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 73,
              "EndOffset": 87,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email::EqualsCore(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email)": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email::GetHashCodeCore()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email::op_Explicit(System.String)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email::op_Implicit(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Email::.ctor(System.String)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\Setup\\ActionResult.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult::get_Error()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult::get_Message()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult::get_RedirectTo()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult::get_IsValid()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult::.ctor(System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult::.ctor(System.String,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\Setup\\Controller.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Controller": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Controller::View(System.String,System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Controller::View(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Controller::HttpNotFound()": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Controller::View(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.CustomerModel)": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Controller::View()": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Controller::RedirectToAction(System.String)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\Setup\\Database.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Database": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Database::Save(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "CSharpFunctionalExtensions.Maybe`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Customer> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.Database::GetById(System.Int32)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "20": 0,
            "21": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 7,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module4_AvoidPrimitiveObsession\\After\\Setup\\ModelState.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ModelState": {
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ModelState::get_IsValid()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ModelState::AddModelError(System.String,System.String)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module4_AvoidPrimitiveObsession.After.Setup.ModelState::SetIsValidToTrue()": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\Before\\ActionResult.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult::get_Error()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult::get_Message()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult::get_RedirectTo()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult::get_IsValid()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult::.ctor(System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult::.ctor(System.String,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\Before\\Controller.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Controller": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Controller::View(System.String,System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Controller::View(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Controller::HttpNotFound()": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\Before\\TheaterApiClient.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TheaterApiClient": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TheaterApiClient::Reserve(System.DateTime,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\Before\\TheaterGateway.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TheaterGateway": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TheaterGateway::Reserve(System.DateTime,System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\Before\\Ticket.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Ticket": {
        "System.DateTime FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Ticket::get_Date()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Ticket::get_CustomerName()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Ticket::.ctor(System.DateTime,System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\Before\\TicketController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TicketController": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TicketController::BuyTicket(System.DateTime,System.String)": {
          "Lines": {
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "32": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TicketController::Validate(System.DateTime,System.String)": {
          "Lines": {
            "35": 0,
            "36": 0,
            "37": 0,
            "39": 0,
            "40": 0,
            "41": 0
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 28,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 47,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 67,
              "EndOffset": 69,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 67,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TicketController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TicketRepository,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TheaterGateway)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\Before\\TicketRepository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TicketRepository": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.TicketRepository::Save(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.Before.Ticket)": {
          "Lines": {
            "6": 0,
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\After\\ActionResult.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult::get_Error()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult::get_Message()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult::get_RedirectTo()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult::get_IsValid()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult::.ctor(System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult::.ctor(System.String,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\After\\Controller.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Controller": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Controller::View(System.String,System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Controller::View(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Controller::HttpNotFound()": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\After\\TheaterApiClient.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TheaterApiClient": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TheaterApiClient::Reserve(System.DateTime,System.String)": {
          "Lines": {
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\After\\TheaterGateway.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TheaterGateway": {
        "CSharpFunctionalExtensions.Result FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TheaterGateway::Reserve(System.DateTime,System.String)": {
          "Lines": {
            "8": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "23": 0,
            "24": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\After\\Ticket.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Ticket": {
        "System.DateTime FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Ticket::get_Date()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Ticket::get_CustomerName()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Ticket::.ctor(System.DateTime,System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\After\\TicketController.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TicketController": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.ActionResult FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TicketController::BuyTicket(System.DateTime,System.String)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "23": 0,
            "24": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 19,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 68,
              "EndOffset": 70,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 68,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "CSharpFunctionalExtensions.Result FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TicketController::Validate(System.DateTime,System.String)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0,
            "38": 0,
            "39": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 28,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 49,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 69,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 69,
              "EndOffset": 84,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TicketController::.ctor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TicketRepository,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TheaterGateway)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module3_ExceptionsRefactorAway\\After\\TicketRepository.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TicketRepository": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.TicketRepository::Save(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module3_ExceptionsRefactorAway.After.Ticket)": {
          "Lines": {
            "6": 0,
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\Before\\AuditManagerBeforeRefactoring.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.Before.AuditManagerBeforeRefactoring": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.Before.AuditManagerBeforeRefactoring::AddRecord(System.String,System.String,System.DateTime)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 21,
              "EndOffset": 128,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.Before.AuditManagerBeforeRefactoring::GetNewFileName(System.String)": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.Before.AuditManagerBeforeRefactoring::RemoveMentionsAbout(System.String,System.String)": {
          "Lines": {
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": [
            {
              "Line": 39,
              "Offset": 153,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 51,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 51,
              "EndOffset": 77,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 103,
              "EndOffset": 105,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 103,
              "EndOffset": 116,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 153,
              "EndOffset": 158,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.Before.AuditManagerBeforeRefactoring::.ctor(System.Int32)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\ApplicationService.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.ApplicationService": {
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.ApplicationService::RemoveMentionsAbout(System.String)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.ApplicationService::AddRecord(System.String,System.DateTime)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.ApplicationService::.ctor(System.String,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.AuditManager,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Persister)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\AuditManager.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.AuditManager": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.AuditManager::AddRecord(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent,System.String,System.DateTime)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "18": 0,
            "20": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 24,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.AuditManager::.ctor(System.Int32)": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\Persister.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Persister": {
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Persister::ReadFile(System.String)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent[] FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Persister::ReadDirectory(System.String)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Persister::ApplyChange(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Persister::ApplyChanges(System.Collections.Generic.IReadOnlyList`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction>)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "24": 0,
            "25": 0,
            "27": 0,
            "28": 0,
            "30": 0,
            "33": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 86,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 30,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 30,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 36,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 36,
              "EndOffset": 74,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\Models\\AuditEntry.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.AuditEntry": {
        "System.Int32 FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.AuditEntry::get_Number()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.AuditEntry::get_VisitorName()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.AuditEntry::get_TimeOfVisit()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.AuditEntry::.ctor(System.Int32,System.String,System.DateTime)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\Models\\FileAction.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction::get_FileName()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.ActionType FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction::get_Type()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String[] FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction::get_Content()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction::.ctor(System.String,FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.ActionType,System.String[])": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\Models\\FileContent.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent": {
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent::get_FileName()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String[] FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent::get_Content()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent::.ctor(System.String,System.String[])": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\Extensions\\EnumerableAuditEntryExtensions.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Extensions.EnumerableAuditEntryExtensions": {
        "System.String[] FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Extensions.EnumerableAuditEntryExtensions::ConvertToCsv(System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.AuditEntry>)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Courses\\ApplyingFunctionalPrinciples\\Module2_ImmutableArchitecture\\After\\Extensions\\FileContentExtensions.cs": {
      "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Extensions.FileContentExtensions": {
        "System.Collections.Generic.List`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.AuditEntry> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Extensions.FileContentExtensions::GetAuditEntries(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent)": {
          "Lines": {
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Extensions.FileContentExtensions::GetNewFileName(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Extensions.FileContentExtensions::RemoveVisitor(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent,System.String)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "26": 0,
            "28": 0,
            "29": 0,
            "32": 0,
            "33": 0
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 97,
              "EndOffset": 99,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 97,
              "EndOffset": 104,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 117,
              "EndOffset": 119,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 117,
              "EndOffset": 140,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IReadOnlyList`1<FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileAction> FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Extensions.FileContentExtensions::RemoveMentionsAbout(FunctionalCSharp.Courses.ApplyingFunctionalPrinciples.Module2_ImmutableArchitecture.After.Models.FileContent[],System.String)": {
          "Lines": {
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Chap08.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Chap08": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Kid FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Chap08::CreateKid(System.Double)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\PrepareMeal.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.PrepareMeal": {
        "FunctionalCSharp.MyYumba.YEither`2<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.ReasonWhy,System.ValueTuple> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.PrepareMeal::WakeUpEarly()": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.ReasonWhy,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Ingredients> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.PrepareMeal::ShopForIngredients()": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.ReasonWhy,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Food> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.PrepareMeal::CookRecipe(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Ingredients)": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.PrepareMeal::EnjoyTogether(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Food)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.PrepareMeal::ComplainAbout(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.ReasonWhy)": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.PrepareMeal::OrderPizza()": {
          "Lines": {
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.ReasonWhy": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.ReasonWhy::get_Reason()": {
          "Lines": {
            "44": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\RecruitCandidateEitherStyle.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateEitherStyle": {
        "FunctionalCSharp.MyYumba.YEither`2<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Rejection,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateEitherStyle::Recruit(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Rejection,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateEitherStyle::CheckEligibility(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "17": 0
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 8,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.MyYumba.YEither`2<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Rejection,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateEitherStyle::CheckCanTakeTechTest(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "20": 0
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 6,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.MyYumba.YEither`2<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Rejection,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateEitherStyle::CheckCanTakeInterview(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 1,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 9,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 19,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\RecruitCandidateOptionStyle.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateOptionStyle": {
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateOptionStyle::Recruit(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateOptionStyle::IsEligible(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateOptionStyle::TechTest(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "15": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.RecruitCandidateOptionStyle::Interview(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate)": {
          "Lines": {
            "18": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 1,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 9,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 19,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Models\\Candidate.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate::get_FirstName()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate::get_LastName()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate::get_Age()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate::get_HasUniversityDegree()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Candidate::.ctor(System.String,System.String,System.Int32,System.Boolean)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Models\\Kid.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Kid": {
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Kid::get_Age()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Kid::get_FirstName()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Kid::get_LastName()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Kid::.ctor(System.Int32,System.String,System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 18,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 34,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Models\\Rejection.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Rejection": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Models.Rejection::get_Reason()": {
          "Lines": {
            "2": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\Instruments\\Chapter06InstrumentsController.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.Chapter06Controller": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.IActionResult FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.Chapter06Controller::GetInstrumentDetails(System.String)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.Chapter06Controller::.ctor(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.IInstrumentService)": {
          "Lines": {
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\Instruments\\InstrumentDetails.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentDetails": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentDetails::get_TickerName()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentDetails::get_Ticker()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentDetails::.ctor(System.String,System.String)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\Instruments\\InstrumentService.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentService": {
        "LaYumba.Functional.Option`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentDetails> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentService::GetInstrumentDetails(System.String)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 15,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 28,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 41,
              "EndOffset": 91,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 41,
              "EndOffset": 114,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\Infrastructure\\ActionResult.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.ActionResult": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.ActionResult::get_TickerName()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.ActionResult::.ctor(System.String)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\Infrastructure\\Chapter06InstrumentsrControllerBase.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.Chapter06ControllerBase": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.IActionResult FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.Chapter06ControllerBase::Ok(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Instruments.InstrumentDetails)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.IActionResult FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.Chapter06ControllerBase::Ok()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.IActionResult FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.Chapter06ControllerBase::NotFound()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.IActionResult FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.Chapter06ControllerBase::BadRequest(LaYumba.Functional.Error)": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\BookTransfer.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer::get_Bic()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer::get_TransferDate()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer::.ctor(System.String,System.DateTime)": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\BookTransferController.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.Infrastructure.IActionResult FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::BookTransfer(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1<System.ValueTuple> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::BookTransfer1(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<LaYumba.Functional.Error,System.ValueTuple> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::Handle1(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<LaYumba.Functional.Exceptional`1<System.ValueTuple>> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::Handle2(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::Validate(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<LaYumba.Functional.Error,System.ValueTuple> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::SaveBook(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::ValidateDateBookTransfer(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "38": 0
          },
          "Branches": [
            {
              "Line": 38,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 32,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.ValueTuple> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::SaveBookTransfer(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "42": 0,
            "44": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "52": 0,
            "53": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<LaYumba.Functional.Error,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::ValidateBic1(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0
          },
          "Branches": [
            {
              "Line": 61,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 24,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::ValidateBic2(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0
          },
          "Branches": [
            {
              "Line": 67,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 67,
              "Offset": 24,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<LaYumba.Functional.Error,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::ValidateDate1(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "70": 0
          },
          "Branches": [
            {
              "Line": 70,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 16,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::ValidateDate2(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransfer)": {
          "Lines": {
            "71": 0
          },
          "Branches": [
            {
              "Line": 71,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 71,
              "Offset": 16,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Chapter06BookTransferController::.ctor()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\BookTransferHandler.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransferHandler`1": {
        "LaYumba.Functional.Either`2<LaYumba.Functional.Error,System.ValueTuple> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.BookTransferHandler`1::Handle(T)": {
          "Lines": {
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\MyEitherExtensions.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.MyEitherExtensions": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1<T> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.MyEitherExtensions::ToResultDto(LaYumba.Functional.Either`2<LaYumba.Functional.Error,T>)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 39,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\ResultDto.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1": {
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1::get_Succeedded()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1::get_Failed()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "T FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1::get_Data()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1::.ctor(T)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.ResultDto`1::.ctor(LaYumba.Functional.Error)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\Errors\\Chap06BaseErrors.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.Chap06BaseErrors": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.InvalidBic FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.Chap06BaseErrors::get_InvalidBic()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.TransferDateIsInPastBaseError FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.Chap06BaseErrors::get_TransferDateIsInPastBaseError()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\Errors\\InvalidBic.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.InvalidBic": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.InvalidBic::.ctor()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part3_FunctionalDesigns\\Chap8_FunctionalErrorHandling\\Controllers\\BookTransfers\\Errors\\TransferDateIsInPastBaseError.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.TransferDateIsInPastBaseError": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part3_FunctionalDesigns.Chap8_FunctionalErrorHandling.Controllers.BookTransfers.Errors.TransferDateIsInPastBaseError::.ctor()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\MethodChaining\\ExtensionsC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.ExtensionsC7": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.ExtensionsC7::AbbreviateName(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.PersonC7)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.ExtensionsC7::Abbreviate(System.String)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.ExtensionsC7::AddDomain(System.String)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\MethodChaining\\FunctionCompC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.FunctionCompC7": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.FunctionCompC7::AbbreviateName(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.PersonC7)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.FunctionCompC7::AppendDomain(System.String)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.FunctionCompC7::Abbreviate(System.String)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.FunctionCompC7::.cctor()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\MethodChaining\\PersonC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.PersonC7": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.PersonC7::get_FirstName()": {
          "Lines": {
            "3": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\MethodChaining\\StringExtensions.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.StringExtensions": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.MethodChaining.StringExtensions::AppendDomain(System.String)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\LinqFunctionComposition\\PopulationStatistics.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.PopulationStatistics": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.PopulationStatistics::AverageEarningsOfRichestQuartile(System.Collections.Generic.List`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.RichPerson>)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.RichPerson> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.PopulationStatistics::RichestQuartile(System.Collections.Generic.List`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.RichPerson>)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.PopulationStatistics::AverageEarnings(System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.RichPerson>)": {
          "Lines": {
            "18": 0,
            "19": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\LinqFunctionComposition\\RichPerson.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.RichPerson": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.LinqFunctionComposition.RichPerson::get_Earnings()": {
          "Lines": {
            "3": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\FunctionalDomainModelling\\AccountOoC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountOoC7": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountOoC7::get_Balance()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountOoC7::Debit(System.Decimal)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "16": 0,
            "17": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 15,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountOoC7::.ctor(System.Decimal)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\FunctionalDomainModelling\\AccountState.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountState": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountState::get_Balance()": {
          "Lines": {
            "3": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\FunctionalDomainModelling\\AccountStateExtensions.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountStateExtensions": {
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountState> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountStateExtensions::Debit(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountState,System.Decimal)": {
          "Lines": {
            "10": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 12,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\FunctionalDomainModelling\\MakeTransferControllerEndToEnd.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.MakeTransferControllerEndToEnd": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.MakeTransferControllerEndToEnd::MakeTransfer(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7)": {
          "Lines": {
            "11": 0,
            "12": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.MakeTransferControllerEndToEnd::Book(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.MakeTransferControllerEndToEnd::.ctor(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.IValidatorC7`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7>,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.IRepositoryC7`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.AccountState>,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.FunctionalDomainModelling.ISwiftServiceC7)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\BankOfCodeland\\BicFormatValidatorC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.BicFormatValidatorC7": {
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.BicFormatValidatorC7::IsValid(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.BicFormatValidatorC7::.cctor()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\BankOfCodeland\\CommandC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.CommandC7": {
        "System.DateTime FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.CommandC7::get_Timestamp()": {
          "Lines": {
            "3": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\BankOfCodeland\\MakeTransferC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7": {
        "System.Guid FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7::get_DebitedAccountId()": {
          "Lines": {
            "3": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7::get_Amount()": {
          "Lines": {
            "4": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7::get_Beneficiary()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7::.ctor(System.Guid,System.String,System.String,System.String,System.DateTime,System.Decimal,System.String,System.DateTime)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\BankOfCodeland\\MakeTransferC7Extensions.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7Extensions": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7Extensions::CapitalizeBeneficiary(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap7_FunctionComposition\\BankOfCodeland\\MakeTransferControllerC7.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferControllerC7": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferControllerC7::MakeTransferImperative(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 15,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferControllerC7::MakeTransferFunctional(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferControllerC7::Book(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferControllerC7::.ctor(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.IValidatorC7`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap7_FunctionComposition.BankOfCodeland.MakeTransferC7>)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap6_PatternsInFunctionalProgramming\\Chap6Age.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age": {
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::get_Value()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::CreateAge(System.Int32)": {
          "Lines": {
            "13": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 6,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::IsValid(System.Int32)": {
          "Lines": {
            "18": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 2,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::op_LessThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::op_GreaterThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age)": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::op_LessThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age,System.Int32)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::op_GreaterThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age,System.Int32)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::EqualsCore(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::GetHashCodeCore()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::op_Implicit(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::ToString()": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age::.ctor(System.Int32)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap6_PatternsInFunctionalProgramming\\Chap6AgeReader.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6AgeReader": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6AgeReader::StartProgram()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6AgeReader::ReadAge()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6AgeReader::AskUserAge(System.String)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6AgeReader::ParseAge(System.String)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap6_PatternsInFunctionalProgramming\\Chap6RiskCalculator.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6RiskCalculator": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Risk FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6RiskCalculator::CalculateRiskProfileChap6(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age)": {
          "Lines": {
            "9": 0
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 8,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Risk> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6RiskCalculator::RiskOf(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Subject)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap6_PatternsInFunctionalProgramming\\Chap6Subject.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Subject": {
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Age> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap6_PatternsInFunctionalProgramming.Chap6Subject::get_Age()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\Chap05.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05::AbbreviateName(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05::AppendDomain(System.String)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05::Abbreviate(System.String)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05::MethodChaining()": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05::CompositionInElevatedWorld()": {
          "Lines": {
            "24": 0,
            "25": 0,
            "27": 0,
            "28": 0,
            "30": 0,
            "31": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05::CalculateAverage()": {
          "Lines": {
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "39": 0,
            "41": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Chap05::.ctor()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.PersonListExtensions": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.PersonListExtensions::AverageEarnings(System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person>)": {
          "Lines": {
            "46": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.PersonListExtensions::RichestQuartile(System.Collections.Generic.IReadOnlyCollection`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person>)": {
          "Lines": {
            "49": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.ReadOnlyCollectionExtensions": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.ReadOnlyCollectionExtensions::AverageEarningsOfRichestQuartile(System.Collections.Generic.IReadOnlyCollection`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person>)": {
          "Lines": {
            "57": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.MyStringExtensions": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.MyStringExtensions::AppendAtManningDotCom(System.String)": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\IndexerIdiosyncrasy.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.IndexerIdiosyncrasy": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.IndexerIdiosyncrasy::WriteColorToScreen()": {
          "Lines": {
            "11": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\IndexerLookupReturnsOption.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.IndexerLookupReturnsOption": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.IndexerLookupReturnsOption::WriteColorToScreen()": {
          "Lines": {
            "9": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\MyInt.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.MyInt": {
        "FunctionalCSharp.MyYumba.YOption`1<System.Int32> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.MyInt::Parse(System.String)": {
          "Lines": {
            "12": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 8,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\OptionIntroduction.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.OptionIntroduction": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.OptionIntroduction::Greet(LaYumba.Functional.Option`1<System.String>)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\Person.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person::get_FirstName()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person::get_LastName()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person::get_Earnings()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<System.Int32> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person::get_Age()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person::.ctor()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person::.ctor(System.String,System.String)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\PersonExtensions.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.PersonExtensions": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.PersonExtensions::AbbreviateName(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Person)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.PersonExtensions::Abbreviate(System.String)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.StringExtensions": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.StringExtensions::AppendDomain(System.String)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\OptionoClass\\OptionoUseCases.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.yOptionClass.yOptionUseCases": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.yOptionClass.yOptionUseCases::yOptionGreet(FunctionalCSharp.MyYumba.YOption`1<System.String>)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\Newsletter\\Subscriber.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.Subscriber": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.Subscriber::get_Name()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.OptSubscriber": {
        "FunctionalCSharp.MyYumba.YOption`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.OptSubscriber::get_Name()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.NewsLetterService": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.NewsLetterService::GreetingFor(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.Subscriber)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.NewsLetterService::OptGreetingFor(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.Newsletter.OptSubscriber)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap5_DesigningProgramsWithFunctionComposition\\CustomType\\Chap5Age.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age": {
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::get_Value()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YOption`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::CreateAge(System.Int32)": {
          "Lines": {
            "14": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::IsValid(System.Int32)": {
          "Lines": {
            "16": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 2,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::op_LessThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::op_GreaterThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age)": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::op_LessThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age,System.Int32)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::op_GreaterThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age,System.Int32)": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::EqualsCore(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::GetHashCodeCore()": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::op_Implicit(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap5_DesigningProgramsWithFunctionComposition.CustomType.Chap5Age::.ctor(System.Int32)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap4_FunctionSignaturesAndTypes\\Chap4.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4": {
        "LaYumba.Functional.Option`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4::OptionTestMethod(System.String)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap4_FunctionSignaturesAndTypes\\Chap4Age.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age": {
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::get_Value()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::CreateAge(System.Int32)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 4,
              "EndOffset": 6,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 4,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 8,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 8,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 21,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::op_LessThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::op_GreaterThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age)": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::op_LessThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age,System.Int32)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::op_GreaterThan(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age,System.Int32)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::EqualsCore(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::GetHashCodeCore()": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age::.ctor(System.Int32)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap4_FunctionSignaturesAndTypes\\Instrumentation.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Instrumentation": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Instrumentation::WriteTimeTakenToConsole(System.String,System.Action)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "T FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Instrumentation::WriteTimeTakenToConsole(System.String,System.Func`1<T>)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part2_CoreTechniques\\Chap4_FunctionSignaturesAndTypes\\RiskCalculatorChap4.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.RiskCalculatorChap4": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.RiskChap4 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.RiskCalculatorChap4::CalculateRiskProfileChap4(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age)": {
          "Lines": {
            "14": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 8,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.RiskChap4 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.RiskCalculatorChap4::CalculateRiskProfileChap4(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.Chap4Age,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.GenderChap4)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 3,
              "EndOffset": 9,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 19,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.RiskChap4 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part2_CoreTechniques.Chap4_FunctionSignaturesAndTypes.RiskCalculatorChap4::CalculateRiskProfileChap4(System.Int32)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "29": 0,
            "30": 0
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 3,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 8,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 8,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 21,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 71,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\Chap03AvoidingStateMutation.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap03AvoidingStateMutation": {
        "System.Collections.Generic.List`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap03AvoidingStateMutation::NumberFormat(System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap03AvoidingStateMutation::ZipInEnglish(System.Collections.Generic.IEnumerable`1<System.Int32>,System.Collections.Generic.IEnumerable`1<System.String>)": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap03AvoidingStateMutation::FormatList(System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap03AvoidingStateMutation::FormatListFunctional(System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "33": 0,
            "34": 0,
            "35": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap03AvoidingStateMutation::FormatListFunctionalAsParallel(System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\Chap3AvoidMutatingArguments.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap3AvoidMutatingArguments": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap3AvoidMutatingArguments::ComputeOrderTotal(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Order,System.Collections.Generic.List`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.OrderLine>)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "17": 0,
            "18": 0,
            "19": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 96,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 43,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 96,
              "EndOffset": 98,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple`2<System.Decimal,System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.OrderLine>> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Chap3AvoidMutatingArguments::ComputeOrderTotalFunctional(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Order)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\Orders\\Order.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Order": {
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Order::.ctor()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\Orders\\OrderLine.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.OrderLine": {
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.OrderLine::get_Quantity()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Product FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.OrderLine::get_Product()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\Orders\\Product.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Product": {
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Product::get_Price()": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.Orders.Product::get_Name()": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\BankOfCodeland\\BOC.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Command": {
        "System.DateTime FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Command::get_TimeStamp()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer": {
        "System.Guid FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_DebitAccountId()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Beneficiary()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Iban()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Bic()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Date()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Amount()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Reference()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.DateTime FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Timestamp()": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::get_Dummy()": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer::.ctor(System.Guid,System.String,System.String,System.String,System.DateTime,System.Decimal,System.String,System.DateTime)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\BankOfCodeland\\Validators\\IValidator.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.BicFormatValidator": {
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.BicFormatValidator::IsValid(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer)": {
          "Lines": {
            "15": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 11,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.BicFormatValidator::.cctor()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.DateNotPastValidator": {
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.DateNotPastValidator::IsValid(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.DateNotInPastValidator": {
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.DateNotInPastValidator::IsValid(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.DateNotInPastValidator::.ctor(System.DateTime)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.FunctionalDateNotPastValidator": {
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.FunctionalDateNotPastValidator::IsValid(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.MakeTransfer)": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodeland.Validators.FunctionalDateNotPastValidator::.ctor(System.Func`1<System.DateTime>)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap3_FunctionPurity\\BankOfCodelandOld\\Validators\\TimeService.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodelandOld.Validators.TimeService": {
        "System.DateTime FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodelandOld.Validators.TimeService::get_UtcNow()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap3_FunctionPurity.BankOfCodelandOld.Validators.TimeService::.ctor()": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap2_ThinkingInFunctions\\Chap02.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Chap02": {
        "System.Collections.Generic.IEnumerable`1<System.DayOfWeek> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Chap02::GetDaysStartingWith(System.String)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 67,
              "EndOffset": 69,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 67,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap2_ThinkingInFunctions\\Functions\\FunctionFactories\\ConnectionHelper.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.ConnectionHelper": {
        "T FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.ConnectionHelper::Connect(System.String,System.Func`2<System.Data.IDbConnection,T>)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0
          },
          "Branches": []
        },
        "T FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.ConnectionHelper::ConnectWithUsing(System.String,System.Func`2<System.Data.IDbConnection,T>)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap2_ThinkingInFunctions\\Functions\\FunctionFactories\\DbLogger.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.DbLogger": {
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.DbLogger::Log(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.LogMessage)": {
          "Lines": {
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.DbLogger::LogFunctional1(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.LogMessage)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.DbLogger::LogFunctional2(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.LogMessage)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.LogMessage> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.DbLogger::GetLogs(System.DateTime)": {
          "Lines": {
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.LogMessage> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.DbLogger::GetLogsFunctional(System.DateTime)": {
          "Lines": {
            "47": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.DbLogger::MyExecutor(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.LogMessage)": {
          "Lines": {
            "52": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.SqlMapper": {
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.SqlMapper::MyExecute(System.Data.IDbConnection,System.Int32,System.Int32)": {
          "Lines": {
            "62": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap2_ThinkingInFunctions\\Functions\\FunctionFactories\\FunctionFactory.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.FunctionFactory": {
        "System.Func`2<System.Int32,System.Boolean> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap2_ThinkingInFunctions.Functions.FunctionFactories.FunctionFactory::IsDivisibleBy(System.Int32)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap1_Introduction\\Chap1.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1": {
        "System.Collections.Generic.IEnumerable`1<System.Int32> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::GetNumbersMultipliedByThree()": {
          "Lines": {
            "13": 0,
            "15": 0,
            "16": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Int32> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::GetNumbersMultipliedByThreeWithLocalFunction()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Int32> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::LinqMethodsReturnANewList()": {
          "Lines": {
            "24": 0,
            "28": 0,
            "30": 0,
            "31": 0,
            "33": 0,
            "34": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.String,System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::SplitAtTupleExample()": {
          "Lines": {
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::GetNamesOfDaysStartWithS()": {
          "Lines": {
            "44": 0,
            "45": 0,
            "50": 0,
            "51": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Int32> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::GetOddNumbersWithMyWhereFunctional()": {
          "Lines": {
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Int32> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::GetOddNumbersWithMyWhere()": {
          "Lines": {
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::Divide()": {
          "Lines": {
            "66": 0,
            "68": 0,
            "69": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::DivideSwappedArgs()": {
          "Lines": {
            "72": 0,
            "74": 0,
            "75": 0,
            "76": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Collections.Generic.IEnumerable`1<System.Int32>,System.Collections.Generic.IEnumerable`1<System.Int32>> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::GetEvensAndOdds()": {
          "Lines": {
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::CalculateVat(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Address,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Order)": {
          "Lines": {
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0
          },
          "Branches": [
            {
              "Line": 86,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 12,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 48,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 48,
              "EndOffset": 81,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 26,
              "EndOffset": 97,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::DeVat(FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Order)": {
          "Lines": {
            "94": 0
          },
          "Branches": [
            {
              "Line": 94,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 94,
              "Offset": 17,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::Vat(System.Decimal,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Order)": {
          "Lines": {
            "96": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::RateByCountry(System.String)": {
          "Lines": {
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0
          },
          "Branches": [
            {
              "Line": 100,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 15,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 28,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 28,
              "EndOffset": 59,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::RateByState(System.String)": {
          "Lines": {
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 15,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 28,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 41,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 41,
              "EndOffset": 89,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::<GetNumbersMultipliedByThree>g__MultiplyInputByThree|0_0(System.Int32)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.DayOfWeek> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1::<GetNamesOfDaysStartWithS>g__DaysStartingWith|4_0(System.String,FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1/<>c__DisplayClass4_0&)": {
          "Lines": {
            "48": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Address": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Address::get_Country()": {
          "Lines": {
            "118": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.UsAddress": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.UsAddress::get_State()": {
          "Lines": {
            "119": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Product": {
        "System.String FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Product::get_Name()": {
          "Lines": {
            "120": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Order": {
        "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Product FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Order::get_Product()": {
          "Lines": {
            "122": 0
          },
          "Branches": []
        },
        "System.Decimal FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Order::get_NetPrice()": {
          "Lines": {
            "124": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp\\Books\\FunctionalProgrammingInCSharp\\Part1_CoreConcepts\\Chap1_Introduction\\Chap1HigherOrderFunctions.cs": {
      "FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions": {
        "System.Func`3<T2,T1,TR> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions::SwapArgs(System.Func`3<T1,T2,TR>)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.String,System.String> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions::AsPair(System.String)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<T> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions::MyWhereFunctional(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<T> FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions::MyWhere(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Int32 FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions::MultiplyByThree(System.Int32)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions::IsOdd(System.Int32)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Books.FunctionalProgrammingInCSharp.Part1_CoreConcepts.Chap1_Introduction.Chap1HigherOrderFunctions::.cctor()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    }
  },
  "FunctionalCSharp.MyYumba.dll": {
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\FuncExtensions.cs": {
      "FunctionalCSharp.MyYumba.FuncExtensions": {
        "System.Func`2<T1,R> FunctionalCSharp.MyYumba.FuncExtensions::Compose(System.Func`2<T2,R>,System.Func`2<T1,T2>)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\Y.cs": {
      "FunctionalCSharp.MyYumba.Y": {
        "System.ValueTuple FunctionalCSharp.MyYumba.Y::Unit()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YOption`1<T> FunctionalCSharp.MyYumba.Y::YSome(T)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YNoneType FunctionalCSharp.MyYumba.Y::get_YNone()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YEither.cs": {
      "FunctionalCSharp.MyYumba.Y": {
        "FunctionalCSharp.MyYumba.YEither/YLeft`1<L> FunctionalCSharp.MyYumba.Y::YLeft(L)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither/YRight`1<R> FunctionalCSharp.MyYumba.Y::YRight(R)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.MyYumba.YEither`2": {
        "L FunctionalCSharp.MyYumba.YEither`2::get_YLeft()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "R FunctionalCSharp.MyYumba.YEither`2::get_YRight()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.MyYumba.YEither`2::get_IsRight()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.MyYumba.YEither`2::get_IsLeft()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,R> FunctionalCSharp.MyYumba.YEither`2::op_Implicit(L)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,R> FunctionalCSharp.MyYumba.YEither`2::op_Implicit(R)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,R> FunctionalCSharp.MyYumba.YEither`2::op_Implicit(FunctionalCSharp.MyYumba.YEither/YLeft`1<L>)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,R> FunctionalCSharp.MyYumba.YEither`2::op_Implicit(FunctionalCSharp.MyYumba.YEither/YRight`1<R>)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "Tr FunctionalCSharp.MyYumba.YEither`2::YMatch(System.Func`2<L,Tr>,System.Func`2<R,Tr>)": {
          "Lines": {
            "33": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 6,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple FunctionalCSharp.MyYumba.YEither`2::YMatch(System.Action`1<L>,System.Action`1<R>)": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.MyYumba.YEither`2::ToString()": {
          "Lines": {
            "43": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 7,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 38,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.MyYumba.YEither`2::.ctor(L)": {
          "Lines": {
            "20": 0
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 8,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.MyYumba.YEither`2::.ctor(R)": {
          "Lines": {
            "23": 0,
            "24": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 8,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "FunctionalCSharp.MyYumba.YEither`2/<AsEnumerable>d__19": {
        "System.Boolean FunctionalCSharp.MyYumba.YEither`2/<AsEnumerable>d__19::MoveNext()": {
          "Lines": {
            "39": 0,
            "40": 0,
            "41": 0
          },
          "Branches": [
            {
              "Line": 40,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 45,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "FunctionalCSharp.MyYumba.YEither/YLeft`1": {
        "L FunctionalCSharp.MyYumba.YEither/YLeft`1::get_Value()": {
          "Lines": {
            "50": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.MyYumba.YEither/YLeft`1::ToString()": {
          "Lines": {
            "53": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.MyYumba.YEither/YLeft`1::.ctor(L)": {
          "Lines": {
            "52": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.MyYumba.YEither/YRight`1": {
        "R FunctionalCSharp.MyYumba.YEither/YRight`1::get_Value()": {
          "Lines": {
            "57": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.MyYumba.YEither/YRight`1::ToString()": {
          "Lines": {
            "60": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither/YRight`1<Rr> FunctionalCSharp.MyYumba.YEither/YRight`1::YMap(System.Func`2<R,Rr>)": {
          "Lines": {
            "62": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,Rr> FunctionalCSharp.MyYumba.YEither/YRight`1::YBind(System.Func`2<R,FunctionalCSharp.MyYumba.YEither`2<L,Rr>>)": {
          "Lines": {
            "63": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.MyYumba.YEither/YRight`1::.ctor(R)": {
          "Lines": {
            "59": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YActionExtensions.cs": {
      "FunctionalCSharp.MyYumba.YActionExtensions": {
        "System.Func`1<System.ValueTuple> FunctionalCSharp.MyYumba.YActionExtensions::YToFunc(System.Action)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Func`2<T,System.ValueTuple> FunctionalCSharp.MyYumba.YActionExtensions::YToFunc(System.Action`1<T>)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Func`3<T1,T2,System.ValueTuple> FunctionalCSharp.MyYumba.YActionExtensions::YToFunc(System.Action`2<T1,T2>)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Func`1<System.Threading.Tasks.Task`1<System.ValueTuple>> FunctionalCSharp.MyYumba.YActionExtensions::YToFunc(System.Func`1<System.Threading.Tasks.Task>)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Func`2<T,System.Threading.Tasks.Task`1<System.ValueTuple>> FunctionalCSharp.MyYumba.YActionExtensions::YToFunc(System.Func`2<T,System.Threading.Tasks.Task>)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Func`3<T1,T2,System.Threading.Tasks.Task`1<System.ValueTuple>> FunctionalCSharp.MyYumba.YActionExtensions::YToFunc(System.Func`3<T1,T2,System.Threading.Tasks.Task>)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YDictionaryExtensions.cs": {
      "FunctionalCSharp.MyYumba.YDictionaryExtensions": {
        "FunctionalCSharp.MyYumba.YOption`1<T> FunctionalCSharp.MyYumba.YDictionaryExtensions::YLookup(System.Collections.Generic.Dictionary`2<K,T>,K)": {
          "Lines": {
            "10": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IDictionary`2<K,R> FunctionalCSharp.MyYumba.YDictionaryExtensions::YMap(System.Collections.Generic.IDictionary`2<K,T>,System.Func`2<T,R>)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 57,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 57,
              "EndOffset": 59,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YEitherExtensions.cs": {
      "FunctionalCSharp.MyYumba.YEitherExtensions": {
        "System.String FunctionalCSharp.MyYumba.YEitherExtensions::RenderResult(FunctionalCSharp.MyYumba.YEither`2<System.String,System.Double>)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,Rr> FunctionalCSharp.MyYumba.YEitherExtensions::YMap(FunctionalCSharp.MyYumba.YEither`2<L,R>,System.Func`2<R,Rr>)": {
          "Lines": {
            "13": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 21,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,System.ValueTuple> FunctionalCSharp.MyYumba.YEitherExtensions::YForEach(FunctionalCSharp.MyYumba.YEither`2<L,R>,System.Action`1<R>)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YEither`2<L,Rr> FunctionalCSharp.MyYumba.YEitherExtensions::YBind(FunctionalCSharp.MyYumba.YEither`2<L,R>,System.Func`2<R,FunctionalCSharp.MyYumba.YEither`2<L,Rr>>)": {
          "Lines": {
            "19": 0
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 8,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YFuncExtensions.cs": {
      "FunctionalCSharp.MyYumba.YFuncExtensions": {
        "System.Func`2<T,System.Boolean> FunctionalCSharp.MyYumba.YFuncExtensions::YNegate(System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YiEnumerableExtensions.cs": {
      "FunctionalCSharp.MyYumba.YiEnumerableExtensions": {
        "System.Collections.Generic.IEnumerable`1<System.ValueTuple> FunctionalCSharp.MyYumba.YiEnumerableExtensions::YForEach(System.Collections.Generic.IEnumerable`1<T>,System.Action`1<T>)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<R> FunctionalCSharp.MyYumba.YiEnumerableExtensions::YBind(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Collections.Generic.IEnumerable`1<R>>)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<T> FunctionalCSharp.MyYumba.YiEnumerableExtensions::YList(T[])": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<R> FunctionalCSharp.MyYumba.YiEnumerableExtensions::YBind(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,FunctionalCSharp.MyYumba.YOption`1<R>>)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.MyYumba.YiEnumerableExtensions/<YMap>d__0`2": {
        "System.Boolean FunctionalCSharp.MyYumba.YiEnumerableExtensions/<YMap>d__0`2::MoveNext()": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 149,
              "EndOffset": 65,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 149,
              "EndOffset": 151,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YInt.cs": {
      "FunctionalCSharp.MyYumba.YInt": {
        "FunctionalCSharp.MyYumba.YOption`1<System.Int32> FunctionalCSharp.MyYumba.YInt::YIntParse(System.String)": {
          "Lines": {
            "8": 0,
            "9": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.MyYumba.YInt::YIsOdd(System.Int32)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.MyYumba.YInt::.cctor()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YISetExtensions.cs": {
      "FunctionalCSharp.MyYumba.YiSetExtensions": {
        "System.Collections.Generic.ISet`1<R> FunctionalCSharp.MyYumba.YiSetExtensions::YMap(System.Collections.Generic.ISet`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 44,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YOption.cs": {
      "FunctionalCSharp.MyYumba.YOption`1": {
        "FunctionalCSharp.MyYumba.YOption`1<T> FunctionalCSharp.MyYumba.YOption`1::op_Implicit(FunctionalCSharp.MyYumba.YNoneType)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YOption`1<T> FunctionalCSharp.MyYumba.YOption`1::op_Implicit(T)": {
          "Lines": {
            "18": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "R FunctionalCSharp.MyYumba.YOption`1::YMatch(System.Func`1<R>,System.Func`2<T,R>)": {
          "Lines": {
            "21": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 6,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void FunctionalCSharp.MyYumba.YOption`1::.ctor(T)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 10,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "FunctionalCSharp.MyYumba.YOption`1/<YAsEnumerable>d__6": {
        "System.Boolean FunctionalCSharp.MyYumba.YOption`1/<YAsEnumerable>d__6::MoveNext()": {
          "Lines": {
            "24": 0,
            "25": 0,
            "26": 0
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 45,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YOptionExtensions.cs": {
      "FunctionalCSharp.MyYumba.YOptionExtensions": {
        "FunctionalCSharp.MyYumba.YOption`1<R> FunctionalCSharp.MyYumba.YOptionExtensions::YMap(FunctionalCSharp.MyYumba.YOption`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "13": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.MyYumba.YOption`1<System.ValueTuple> FunctionalCSharp.MyYumba.YOptionExtensions::YForEach(FunctionalCSharp.MyYumba.YOption`1<T>,System.Action`1<T>)": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "FunctionalCSharp.MyYumba.YOption`1<R> FunctionalCSharp.MyYumba.YOptionExtensions::YBind(FunctionalCSharp.MyYumba.YOption`1<T>,System.Func`2<T,FunctionalCSharp.MyYumba.YOption`1<R>>)": {
          "Lines": {
            "23": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 8,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "FunctionalCSharp.MyYumba.YOption`1<T> FunctionalCSharp.MyYumba.YOptionExtensions::YWhere(FunctionalCSharp.MyYumba.YOption`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "27": 0
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 32,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YString.cs": {
      "FunctionalCSharp.MyYumba.YString": {
        "System.ValueTuple`2<System.String,System.String> FunctionalCSharp.MyYumba.YString::YSplitAt(System.String,System.Int32)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.MyYumba.YString::.cctor()": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.MyYumba\\YValueCollectionExtensions.cs": {
      "FunctionalCSharp.MyYumba.YValueCollectionExtensions": {
        "FunctionalCSharp.MyYumba.YOption`1<System.String> FunctionalCSharp.MyYumba.YValueCollectionExtensions::YLookup(System.Collections.Specialized.NameValueCollection,System.String)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      }
    }
  },
  "FunctionalCSharp.Shared.dll": {
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.Shared\\ValueObjectClass\\ValueObject.cs": {
      "FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1": {
        "System.Boolean FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1::Equals(System.Object)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 19,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1::GetHashCode()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1::op_Equality(FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1<T>,FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1<T>)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 2,
              "EndOffset": 10,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 13,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 20,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 31,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1::op_Inequality(FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1<T>,FunctionalCSharp.Shared.ValueObjectClass.ValueObject`1<T>)": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.Shared\\Extensions\\FunctionalExtensions.cs": {
      "FunctionalCSharp.Shared.Extensions.FunctionalExtensions": {
        "TR FunctionalCSharp.Shared.Extensions.FunctionalExtensions::Map(T,System.Func`2<T,TR>)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<TR> FunctionalCSharp.Shared.Extensions.FunctionalExtensions::Map(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,TR>)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "T FunctionalCSharp.Shared.Extensions.FunctionalExtensions::Tee(T,System.Action`1<T>)": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "System.Void FunctionalCSharp.Shared.Extensions.FunctionalExtensions::ToConsole(T,System.String)": {
          "Lines": {
            "54": 0,
            "55": 0,
            "56": 0,
            "58": 0,
            "59": 0
          },
          "Branches": [
            {
              "Line": 55,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 9,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "T2 FunctionalCSharp.Shared.Extensions.FunctionalExtensions::DoIfNotNull(T1,System.Func`2<T1,T2>)": {
          "Lines": {
            "65": 0
          },
          "Branches": [
            {
              "Line": 65,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 20,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Shared.Extensions.FunctionalExtensions::Validate(T,System.Func`2<T,System.Boolean>[])": {
          "Lines": {
            "69": 0
          },
          "Branches": []
        }
      },
      "FunctionalCSharp.Shared.Extensions.FunctionalExtensions/<Peek>d__3`1": {
        "System.Boolean FunctionalCSharp.Shared.Extensions.FunctionalExtensions/<Peek>d__3`1::MoveNext()": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0
          },
          "Branches": [
            {
              "Line": 22,
              "Offset": 156,
              "EndOffset": 65,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 156,
              "EndOffset": 158,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      },
      "FunctionalCSharp.Shared.Extensions.FunctionalExtensions/<TrySelect>d__4`2": {
        "System.Boolean FunctionalCSharp.Shared.Extensions.FunctionalExtensions/<TrySelect>d__4`2::MoveNext()": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "47": 0,
            "48": 0,
            "49": 0
          },
          "Branches": [
            {
              "Line": 32,
              "Offset": 249,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 180,
              "EndOffset": 182,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 180,
              "EndOffset": 213,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 249,
              "EndOffset": 254,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\FunctionalCSharp.Shared\\Extensions\\StringExtensions.cs": {
      "FunctionalCSharp.Shared.Extensions.StringExtensions": {
        "System.String FunctionalCSharp.Shared.Extensions.StringExtensions::ValueOrDefault(System.String,System.String)": {
          "Lines": {
            "11": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 6,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 FunctionalCSharp.Shared.Extensions.StringExtensions::ValueOrDefault(System.String,System.Int32)": {
          "Lines": {
            "15": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 16,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Shared.Extensions.StringExtensions::IsNullOrEmpty(System.String)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Shared.Extensions.StringExtensions::IsNotNullOrEmpty(System.String)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Shared.Extensions.StringExtensions::IsNullOrWhiteSpace(System.String)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Shared.Extensions.StringExtensions::IsNotNullOrWhiteSpace(System.String)": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Collections.Generic.IEnumerable`1<System.String>> FunctionalCSharp.Shared.Extensions.StringExtensions::Parser(System.String,System.String,System.String)": {
          "Lines": {
            "36": 0,
            "37": 0
          },
          "Branches": []
        },
        "System.String FunctionalCSharp.Shared.Extensions.StringExtensions::ToSentenceCase(System.String)": {
          "Lines": {
            "43": 0,
            "44": 0,
            "45": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 6,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean FunctionalCSharp.Shared.Extensions.StringExtensions::IsValidEmailAddress(System.String)": {
          "Lines": {
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 9,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.String FunctionalCSharp.Shared.Extensions.StringExtensions::CapitalizeFirstCharacterRestLowerCase(System.String)": {
          "Lines": {
            "59": 0
          },
          "Branches": []
        },
        "T FunctionalCSharp.Shared.Extensions.StringExtensions::ConvertTo(System.String)": {
          "Lines": {
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0
          },
          "Branches": [
            {
              "Line": 62,
              "Offset": 5,
              "EndOffset": 7,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 62,
              "Offset": 5,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 62,
              "Offset": 18,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 62,
              "Offset": 18,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.String FunctionalCSharp.Shared.Extensions.StringExtensions::RemoveWhitespace(System.String)": {
          "Lines": {
            "72": 0
          },
          "Branches": []
        },
        "System.Boolean FunctionalCSharp.Shared.Extensions.StringExtensions::Contains(System.String,System.String,System.StringComparison)": {
          "Lines": {
            "75": 0
          },
          "Branches": [
            {
              "Line": 75,
              "Offset": 1,
              "EndOffset": 3,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 75,
              "Offset": 1,
              "EndOffset": 6,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    }
  },
  "LaYumba.Functional.dll": {
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\ActionExt.cs": {
      "LaYumba.Functional.ActionExt": {
        "System.Func`1<System.ValueTuple> LaYumba.Functional.ActionExt::ToFunc(System.Action)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "System.Func`2<T,System.ValueTuple> LaYumba.Functional.ActionExt::ToFunc(System.Action`1<T>)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Func`3<T1,T2,System.ValueTuple> LaYumba.Functional.ActionExt::ToFunc(System.Action`2<T1,T2>)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Func`1<System.Threading.Tasks.Task`1<System.ValueTuple>> LaYumba.Functional.ActionExt::ToFunc(System.Func`1<System.Threading.Tasks.Task>)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Func`2<T,System.Threading.Tasks.Task`1<System.ValueTuple>> LaYumba.Functional.ActionExt::ToFunc(System.Func`2<T,System.Threading.Tasks.Task>)": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Func`3<T1,T2,System.Threading.Tasks.Task`1<System.ValueTuple>> LaYumba.Functional.ActionExt::ToFunc(System.Func`3<T1,T2,System.Threading.Tasks.Task>)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Agent.cs": {
      "LaYumba.Functional.Agent": {
        "LaYumba.Functional.Agent`1<Msg> LaYumba.Functional.Agent::Start(System.Action`1<Msg>)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Agent`1<Msg> LaYumba.Functional.Agent::Start(System.Func`1<State>,System.Func`3<State,Msg,State>)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Agent`1<Msg> LaYumba.Functional.Agent::Start(State,System.Func`3<State,Msg,State>)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Agent`1<Msg> LaYumba.Functional.Agent::Start(State,System.Func`3<State,Msg,System.Threading.Tasks.Task`1<State>>)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Agent`2<Msg,Reply> LaYumba.Functional.Agent::Start(State,System.Func`3<State,Msg,System.ValueTuple`2<State,Reply>>)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Agent`2<Msg,Reply> LaYumba.Functional.Agent::Start(State,System.Func`3<State,Msg,System.Threading.Tasks.Task`1<System.ValueTuple`2<State,Reply>>>)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.StatelessAgent`1": {
        "System.Void LaYumba.Functional.StatelessAgent`1::Tell(Msg)": {
          "Lines": {
            "60": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.StatelessAgent`1::.ctor(System.Action`1<Msg>)": {
          "Lines": {
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.StatelessAgent`1::.ctor(System.Func`2<Msg,System.Threading.Tasks.Task>)": {
          "Lines": {
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.StatefulAgent`2": {
        "System.Void LaYumba.Functional.StatefulAgent`2::Tell(Msg)": {
          "Lines": {
            "86": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.StatefulAgent`2::.ctor(State,System.Func`3<State,Msg,State>)": {
          "Lines": {
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "73": 0,
            "74": 0,
            "75": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.StatefulAgent`2::.ctor(State,System.Func`3<State,Msg,System.Threading.Tasks.Task`1<State>>)": {
          "Lines": {
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "82": 0,
            "83": 0,
            "84": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TwoWayAgent`3": {
        "System.Threading.Tasks.Task`1<Reply> LaYumba.Functional.TwoWayAgent`3::Tell(Msg)": {
          "Lines": {
            "127": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.TwoWayAgent`3::.ctor(State,System.Func`3<State,Msg,System.ValueTuple`2<State,Reply>>)": {
          "Lines": {
            "94": 0,
            "95": 0,
            "96": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.TwoWayAgent`3::.ctor(State,System.Func`3<State,Msg,System.Threading.Tasks.Task`1<System.ValueTuple`2<State,Reply>>>)": {
          "Lines": {
            "108": 0,
            "109": 0,
            "110": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0,
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0
          },
          "Branches": [
            {
              "Line": 116,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 116,
              "Offset": 12,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Atom.cs": {
      "LaYumba.Functional.Atom`1": {
        "T LaYumba.Functional.Atom`1::get_Value()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "T LaYumba.Functional.Atom`1::Swap(System.Func`2<T,T>)": {
          "Lines": {
            "15": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 120,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 120,
              "EndOffset": 122,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 49,
              "EndOffset": 123,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "T LaYumba.Functional.Atom`1::Swap_SimplerButLessEfficient(System.Func`2<T,T>)": {
          "Lines": {
            "36": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "46": 0,
            "47": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 51,
              "EndOffset": 1,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 51,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Atom`1::.ctor(T)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Coyo.cs": {
      "LaYumba.Functional.Coyo`2": {
        "V LaYumba.Functional.Coyo`2::get_Value()": {
          "Lines": {
            "3": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Coyo": {
        "LaYumba.Functional.Coyo`2<V,T> LaYumba.Functional.Coyo::Of(V)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 7,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Coyo`2<V,R> LaYumba.Functional.Coyo::Map(LaYumba.Functional.Coyo`2<V,T>,System.Func`2<T,R>)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Date.cs": {
      "LaYumba.Functional.Date": {
        "LaYumba.Functional.Option`1<System.DateTime> LaYumba.Functional.Date::Parse(System.String)": {
          "Lines": {
            "8": 0,
            "10": 0,
            "11": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Decimal.cs": {
      "LaYumba.Functional.Decimal": {
        "LaYumba.Functional.Option`1<System.Decimal> LaYumba.Functional.Decimal::Parse(System.String)": {
          "Lines": {
            "8": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean LaYumba.Functional.Decimal::IsOdd(System.Decimal)": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Decimal::IsEven(System.Decimal)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.Decimal::.cctor()": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\DictionaryExt.cs": {
      "LaYumba.Functional.DictionaryExt": {
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.DictionaryExt::Lookup(System.Collections.Generic.IDictionary`2<K,T>,K)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Double.cs": {
      "LaYumba.Functional.Double": {
        "LaYumba.Functional.Option`1<System.Double> LaYumba.Functional.Double::Parse(System.String)": {
          "Lines": {
            "8": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Either.cs": {
      "LaYumba.Functional.F": {
        "LaYumba.Functional.Either/Left`1<L> LaYumba.Functional.F::Left(L)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either/Right`1<R> LaYumba.Functional.F::Right(R)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Either`2": {
        "L LaYumba.Functional.Either`2::get_Left()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.Either`2::get_Right()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Either`2::get_IsRight()": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Either`2::get_IsLeft()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,R> LaYumba.Functional.Either`2::op_Implicit(L)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,R> LaYumba.Functional.Either`2::op_Implicit(R)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,R> LaYumba.Functional.Either`2::op_Implicit(LaYumba.Functional.Either/Left`1<L>)": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,R> LaYumba.Functional.Either`2::op_Implicit(LaYumba.Functional.Either/Right`1<R>)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "TR LaYumba.Functional.Either`2::Match(System.Func`2<L,TR>,System.Func`2<R,TR>)": {
          "Lines": {
            "36": 0
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 6,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple LaYumba.Functional.Either`2::Match(System.Action`1<L>,System.Action`1<R>)": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "System.String LaYumba.Functional.Either`2::ToString()": {
          "Lines": {
            "46": 0
          },
          "Branches": [
            {
              "Line": 46,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 7,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 38,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Either`2::.ctor(L)": {
          "Lines": {
            "22": 0,
            "23": 0
          },
          "Branches": [
            {
              "Line": 22,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 8,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Either`2::.ctor(R)": {
          "Lines": {
            "26": 0,
            "27": 0
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 8,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.Either`2/<AsEnumerable>d__19": {
        "System.Boolean LaYumba.Functional.Either`2/<AsEnumerable>d__19::MoveNext()": {
          "Lines": {
            "42": 0,
            "43": 0,
            "44": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 45,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.Either/Left`1": {
        "L LaYumba.Functional.Either/Left`1::get_Value()": {
          "Lines": {
            "53": 0
          },
          "Branches": []
        },
        "System.String LaYumba.Functional.Either/Left`1::ToString()": {
          "Lines": {
            "56": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.Either/Left`1::.ctor(L)": {
          "Lines": {
            "54": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Either/Right`1": {
        "R LaYumba.Functional.Either/Right`1::get_Value()": {
          "Lines": {
            "61": 0
          },
          "Branches": []
        },
        "System.String LaYumba.Functional.Either/Right`1::ToString()": {
          "Lines": {
            "64": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either/Right`1<RR> LaYumba.Functional.Either/Right`1::Map(System.Func`2<R,RR>)": {
          "Lines": {
            "66": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,RR> LaYumba.Functional.Either/Right`1::Bind(System.Func`2<R,LaYumba.Functional.Either`2<L,RR>>)": {
          "Lines": {
            "67": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.Either/Right`1::.ctor(R)": {
          "Lines": {
            "62": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.EitherExt": {
        "LaYumba.Functional.Either`2<L,RR> LaYumba.Functional.EitherExt::Map(LaYumba.Functional.Either`2<L,R>,System.Func`2<R,RR>)": {
          "Lines": {
            "75": 0,
            "76": 0,
            "77": 0
          },
          "Branches": [
            {
              "Line": 75,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 75,
              "Offset": 21,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<LL,RR> LaYumba.Functional.EitherExt::Map(LaYumba.Functional.Either`2<L,R>,System.Func`2<L,LL>,System.Func`2<R,RR>)": {
          "Lines": {
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0,
            "85": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,System.ValueTuple> LaYumba.Functional.EitherExt::ForEach(LaYumba.Functional.Either`2<L,R>,System.Action`1<R>)": {
          "Lines": {
            "89": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,RR> LaYumba.Functional.EitherExt::Bind(LaYumba.Functional.Either`2<L,R>,System.Func`2<R,LaYumba.Functional.Either`2<L,RR>>)": {
          "Lines": {
            "93": 0,
            "94": 0,
            "95": 0
          },
          "Branches": [
            {
              "Line": 93,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 21,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,RR> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`2<R,RR>>,LaYumba.Functional.Either`2<L,R>)": {
          "Lines": {
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0
          },
          "Branches": [
            {
              "Line": 104,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 104,
              "Offset": 21,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 107,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 107,
              "Offset": 25,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`2<T2,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`3<T1,T2,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "116": 0
          },
          "Branches": [
            {
              "Line": 116,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 116,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`3<T2,T3,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`4<T1,T2,T3,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "120": 0
          },
          "Branches": [
            {
              "Line": 120,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`4<T2,T3,T4,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`5<T1,T2,T3,T4,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "124": 0
          },
          "Branches": [
            {
              "Line": 124,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 124,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`5<T2,T3,T4,T5,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`6<T1,T2,T3,T4,T5,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "128": 0
          },
          "Branches": [
            {
              "Line": 128,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 128,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`6<T2,T3,T4,T5,T6,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`7<T1,T2,T3,T4,T5,T6,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "132": 0
          },
          "Branches": [
            {
              "Line": 132,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 132,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`7<T2,T3,T4,T5,T6,T7,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "136": 0
          },
          "Branches": [
            {
              "Line": 136,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 136,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`8<T2,T3,T4,T5,T6,T7,T8,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "140": 0
          },
          "Branches": [
            {
              "Line": 140,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 140,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R>> LaYumba.Functional.EitherExt::Apply(LaYumba.Functional.Either`2<L,System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>>,LaYumba.Functional.Either`2<L,T1>)": {
          "Lines": {
            "144": 0
          },
          "Branches": [
            {
              "Line": 144,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Either`2<L,R> LaYumba.Functional.EitherExt::Select(LaYumba.Functional.Either`2<L,T>,System.Func`2<T,R>)": {
          "Lines": {
            "154": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Either`2<L,RR> LaYumba.Functional.EitherExt::SelectMany(LaYumba.Functional.Either`2<L,T>,System.Func`2<T,LaYumba.Functional.Either`2<L,R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "162": 0,
            "163": 0,
            "164": 0,
            "165": 0,
            "166": 0,
            "167": 0,
            "168": 0,
            "169": 0,
            "170": 0
          },
          "Branches": [
            {
              "Line": 162,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 162,
              "Offset": 28,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 165,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 165,
              "Offset": 46,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\EnumerableExt.cs": {
      "LaYumba.Functional.F": {
        "System.Collections.Generic.IEnumerable`1<T> LaYumba.Functional.F::List(T[])": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.EnumerableExt": {
        "System.Func`2<T,System.Collections.Generic.IEnumerable`1<T>> LaYumba.Functional.EnumerableExt::Return()": {
          "Lines": {
            "15": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 6,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<T> LaYumba.Functional.EnumerableExt::Append(System.Collections.Generic.IEnumerable`1<T>,T[])": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Collections.Generic.IEnumerable`1<T>,System.Collections.Generic.IEnumerable`1<T>> LaYumba.Functional.EnumerableExt::Partition(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 16,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 63,
              "EndOffset": 88,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.EnumerableExt::Find(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "41": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.ValueTuple> LaYumba.Functional.EnumerableExt::ForEach(System.Collections.Generic.IEnumerable`1<T>,System.Action`1<T>)": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<R> LaYumba.Functional.EnumerableExt::Map_InTermsOfFold(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "49": 0,
            "50": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<T> LaYumba.Functional.EnumerableExt::Where_InTermsOfFold(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "54": 0,
            "55": 0
          },
          "Branches": [
            {
              "Line": 55,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 12,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<R> LaYumba.Functional.EnumerableExt::Bind_InTermsOfFold(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Collections.Generic.IEnumerable`1<R>>)": {
          "Lines": {
            "59": 0,
            "60": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<R> LaYumba.Functional.EnumerableExt::Map(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "64": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.EnumerableExt::Match(System.Collections.Generic.IEnumerable`1<T>,System.Func`1<R>,System.Func`3<T,System.Collections.Generic.IEnumerable`1<T>,R>)": {
          "Lines": {
            "68": 0,
            "69": 0,
            "70": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.EnumerableExt::Head(System.Collections.Generic.IEnumerable`1<T>)": {
          "Lines": {
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0
          },
          "Branches": [
            {
              "Line": 74,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 7,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 76,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 76,
              "Offset": 35,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<System.Func`2<T2,R>> LaYumba.Functional.EnumerableExt::Map(System.Collections.Generic.IEnumerable`1<T1>,System.Func`3<T1,T2,R>)": {
          "Lines": {
            "81": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<System.Func`2<T2,System.Func`2<T3,R>>> LaYumba.Functional.EnumerableExt::Map(System.Collections.Generic.IEnumerable`1<T1>,System.Func`4<T1,T2,T3,R>)": {
          "Lines": {
            "85": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<R> LaYumba.Functional.EnumerableExt::Bind(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Collections.Generic.IEnumerable`1<R>>)": {
          "Lines": {
            "88": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<T> LaYumba.Functional.EnumerableExt::Flatten(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.IEnumerable`1<T>>)": {
          "Lines": {
            "91": 0
          },
          "Branches": [
            {
              "Line": 91,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 91,
              "Offset": 7,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<R> LaYumba.Functional.EnumerableExt::Bind(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>)": {
          "Lines": {
            "94": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<RR> LaYumba.Functional.EnumerableExt::SelectMany(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0
          },
          "Branches": [
            {
              "Line": 102,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 102,
              "Offset": 44,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.EnumerableExt/<DropWhile>d__19`1": {
        "System.Boolean LaYumba.Functional.EnumerableExt/<DropWhile>d__19`1::MoveNext()": {
          "Lines": {
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0
          },
          "Branches": [
            {
              "Line": 119,
              "Offset": 189,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 121,
              "Offset": 96,
              "EndOffset": 98,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 121,
              "Offset": 96,
              "EndOffset": 120,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 121,
              "Offset": 123,
              "EndOffset": 125,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 121,
              "Offset": 123,
              "EndOffset": 165,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 189,
              "EndOffset": 191,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.EnumerableExt/<Prepend>d__2`1": {
        "System.Boolean LaYumba.Functional.EnumerableExt/<Prepend>d__2`1::MoveNext()": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 180,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 180,
              "EndOffset": 182,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.EnumerableExt/<TakeWhile>d__18`1": {
        "System.Boolean LaYumba.Functional.EnumerableExt/<TakeWhile>d__18`1::MoveNext()": {
          "Lines": {
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 165,
              "EndOffset": 65,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 102,
              "EndOffset": 104,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 102,
              "EndOffset": 137,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 165,
              "EndOffset": 167,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Error.cs": {
      "LaYumba.Functional.F": {
        "LaYumba.Functional.Error LaYumba.Functional.F::Error(System.String)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Error": {
        "System.String LaYumba.Functional.Error::get_Message()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.String LaYumba.Functional.Error::ToString()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Error LaYumba.Functional.Error::op_Implicit(System.String)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Exceptional.cs": {
      "LaYumba.Functional.F": {
        "LaYumba.Functional.Exceptional`1<T> LaYumba.Functional.F::Exceptional(T)": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Exceptional`1": {
        "System.Exception LaYumba.Functional.Exceptional`1::get_Ex()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "T LaYumba.Functional.Exceptional`1::get_Value()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Exceptional`1::get_IsSuccess()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Exceptional`1::get_IsException()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Exceptional`1<T> LaYumba.Functional.Exceptional`1::op_Implicit(System.Exception)": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Exceptional`1<T> LaYumba.Functional.Exceptional`1::op_Implicit(T)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "TR LaYumba.Functional.Exceptional`1::Match(System.Func`2<System.Exception,TR>,System.Func`2<T,TR>)": {
          "Lines": {
            "36": 0
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 6,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple LaYumba.Functional.Exceptional`1::Match(System.Action`1<System.Exception>,System.Action`1<T>)": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "System.String LaYumba.Functional.Exceptional`1::ToString()": {
          "Lines": {
            "42": 0,
            "43": 0,
            "44": 0
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 7,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 38,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Exceptional`1::.ctor(System.Exception)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Exceptional`1::.ctor(T)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0
          },
          "Branches": [
            {
              "Line": 28,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 17,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.Exceptional": {
        "System.Func`2<T,LaYumba.Functional.Exceptional`1<T>> LaYumba.Functional.Exceptional::Return()": {
          "Lines": {
            "52": 0
          },
          "Branches": [
            {
              "Line": 52,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 52,
              "Offset": 6,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<R> LaYumba.Functional.Exceptional::Of(System.Exception)": {
          "Lines": {
            "55": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Exceptional`1<R> LaYumba.Functional.Exceptional::Of(R)": {
          "Lines": {
            "58": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Exceptional`1<R> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`2<T,R>>,LaYumba.Functional.Exceptional`1<T>)": {
          "Lines": {
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0
          },
          "Branches": [
            {
              "Line": 64,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 64,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 66,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 66,
              "Offset": 25,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`2<T2,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`3<T1,T2,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "72": 0
          },
          "Branches": [
            {
              "Line": 72,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`3<T2,T3,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`4<T1,T2,T3,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "76": 0
          },
          "Branches": [
            {
              "Line": 76,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 76,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`4<T2,T3,T4,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`5<T1,T2,T3,T4,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "80": 0
          },
          "Branches": [
            {
              "Line": 80,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`5<T2,T3,T4,T5,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`6<T1,T2,T3,T4,T5,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "84": 0
          },
          "Branches": [
            {
              "Line": 84,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 84,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`6<T2,T3,T4,T5,T6,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`7<T1,T2,T3,T4,T5,T6,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "88": 0
          },
          "Branches": [
            {
              "Line": 88,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`7<T2,T3,T4,T5,T6,T7,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "92": 0
          },
          "Branches": [
            {
              "Line": 92,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`8<T2,T3,T4,T5,T6,T7,T8,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "96": 0
          },
          "Branches": [
            {
              "Line": 96,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 96,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R>> LaYumba.Functional.Exceptional::Apply(LaYumba.Functional.Exceptional`1<System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>>,LaYumba.Functional.Exceptional`1<T1>)": {
          "Lines": {
            "100": 0
          },
          "Branches": [
            {
              "Line": 100,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<RR> LaYumba.Functional.Exceptional::Map(LaYumba.Functional.Exceptional`1<R>,System.Func`2<R,RR>)": {
          "Lines": {
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.ValueTuple> LaYumba.Functional.Exceptional::ForEach(LaYumba.Functional.Exceptional`1<R>,System.Action`1<R>)": {
          "Lines": {
            "116": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Exceptional`1<RR> LaYumba.Functional.Exceptional::Bind(LaYumba.Functional.Exceptional`1<R>,System.Func`2<R,LaYumba.Functional.Exceptional`1<RR>>)": {
          "Lines": {
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0
          },
          "Branches": [
            {
              "Line": 123,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 123,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<R> LaYumba.Functional.Exceptional::Select(LaYumba.Functional.Exceptional`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "132": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Exceptional`1<RR> LaYumba.Functional.Exceptional::SelectMany(LaYumba.Functional.Exceptional`1<T>,System.Func`2<T,LaYumba.Functional.Exceptional`1<R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "140": 0,
            "141": 0,
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0
          },
          "Branches": [
            {
              "Line": 140,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 140,
              "Offset": 28,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 143,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 143,
              "Offset": 46,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\F.cs": {
      "LaYumba.Functional.F": {
        "System.ValueTuple LaYumba.Functional.F::Unit()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`2<T2,R>> LaYumba.Functional.F::Curry(System.Func`3<T1,T2,R>)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`2<T2,System.Func`2<T3,R>>> LaYumba.Functional.F::Curry(System.Func`4<T1,T2,T3,R>)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`3<T2,T3,R>> LaYumba.Functional.F::CurryFirst(System.Func`4<T1,T2,T3,R>)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`4<T2,T3,T4,R>> LaYumba.Functional.F::CurryFirst(System.Func`5<T1,T2,T3,T4,R>)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`5<T2,T3,T4,T5,R>> LaYumba.Functional.F::CurryFirst(System.Func`6<T1,T2,T3,T4,T5,R>)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`6<T2,T3,T4,T5,T6,R>> LaYumba.Functional.F::CurryFirst(System.Func`7<T1,T2,T3,T4,T5,T6,R>)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`7<T2,T3,T4,T5,T6,T7,R>> LaYumba.Functional.F::CurryFirst(System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`8<T2,T3,T4,T5,T6,T7,T8,R>> LaYumba.Functional.F::CurryFirst(System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R>> LaYumba.Functional.F::CurryFirst(System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>)": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        },
        "System.Func`2<T,T> LaYumba.Functional.F::Tap(System.Action`1<T>)": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.F::Pipe(T,System.Func`2<T,R>)": {
          "Lines": {
            "41": 0
          },
          "Branches": []
        },
        "T LaYumba.Functional.F::Pipe(T,System.Action`1<T>)": {
          "Lines": {
            "47": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.F::Using(TDisp,System.Func`2<TDisp,R>)": {
          "Lines": {
            "52": 0,
            "53": 0,
            "54": 0
          },
          "Branches": []
        },
        "System.ValueTuple LaYumba.Functional.F::Using(TDisp,System.Action`1<TDisp>)": {
          "Lines": {
            "58": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.F::Using(System.Func`1<TDisp>,System.Func`2<TDisp,R>)": {
          "Lines": {
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0
          },
          "Branches": []
        },
        "System.ValueTuple LaYumba.Functional.F::Using(System.Func`1<TDisp>,System.Action`1<TDisp>)": {
          "Lines": {
            "69": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.F/<Range>d__22": {
        "System.Boolean LaYumba.Functional.F/<Range>d__22::MoveNext()": {
          "Lines": {
            "73": 0,
            "74": 0,
            "75": 0
          },
          "Branches": [
            {
              "Line": 74,
              "Offset": 110,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 110,
              "EndOffset": 112,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.F/<Range>d__23": {
        "System.Boolean LaYumba.Functional.F/<Range>d__23::MoveNext()": {
          "Lines": {
            "78": 0,
            "79": 0,
            "80": 0
          },
          "Branches": [
            {
              "Line": 79,
              "Offset": 109,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 109,
              "EndOffset": 111,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Identity.cs": {
      "LaYumba.Functional.F": {
        "LaYumba.Functional.Identity`1<T> LaYumba.Functional.F::Identity(T)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.FuncTExt": {
        "System.Func`1<R> LaYumba.Functional.FuncTExt::Map(System.Func`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Func`1<R> LaYumba.Functional.FuncTExt::Bind(System.Func`1<T>,System.Func`2<T,System.Func`1<R>>)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Func`1<R> LaYumba.Functional.FuncTExt::Select(System.Func`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "System.Func`1<P> LaYumba.Functional.FuncTExt::SelectMany(System.Func`1<T>,System.Func`2<T,System.Func`1<R>>,System.Func`3<T,R,P>)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.IdentityExt": {
        "LaYumba.Functional.Identity`1<R> LaYumba.Functional.IdentityExt::Map(LaYumba.Functional.Identity`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "47": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Identity`1<R> LaYumba.Functional.IdentityExt::Bind(LaYumba.Functional.Identity`1<T>,System.Func`2<T,LaYumba.Functional.Identity`1<R>>)": {
          "Lines": {
            "50": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Option.cs": {
      "LaYumba.Functional.F": {
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.F::Some(T)": {
          "Lines": {
            "12": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 8,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.NoneType LaYumba.Functional.F::get_None()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Option`1": {
        "System.Boolean LaYumba.Functional.Option`1::get_IsSome()": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Option`1::get_isNone()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.Option`1::op_Implicit(LaYumba.Functional.NoneType)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.Option`1::op_Implicit(T)": {
          "Lines": {
            "33": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 6,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "R LaYumba.Functional.Option`1::Match(System.Func`1<R>,System.Func`2<T,R>)": {
          "Lines": {
            "36": 0
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 6,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean LaYumba.Functional.Option`1::op_True(LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "43": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Option`1::op_False(LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "44": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.Option`1::op_BitwiseOr(LaYumba.Functional.Option`1<T>,LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "45": 0
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 6,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean LaYumba.Functional.Option`1::Equals(LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "50": 0,
            "51": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 20,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 12,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean LaYumba.Functional.Option`1::Equals(LaYumba.Functional.NoneType)": {
          "Lines": {
            "53": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Option`1::op_Equality(LaYumba.Functional.Option`1<T>,LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "55": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Option`1::op_Inequality(LaYumba.Functional.Option`1<T>,LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "56": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Option`1::Equals(System.Object)": {
          "Lines": {
            "59": 0
          },
          "Branches": [
            {
              "Line": 59,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 59,
              "Offset": 6,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 LaYumba.Functional.Option`1::GetHashCode()": {
          "Lines": {
            "62": 0
          },
          "Branches": [
            {
              "Line": 62,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 62,
              "Offset": 6,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.String LaYumba.Functional.Option`1::ToString()": {
          "Lines": {
            "64": 0
          },
          "Branches": [
            {
              "Line": 64,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 64,
              "Offset": 6,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Option`1::.ctor(T)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Option`1/<AsEnumerable>d__10": {
        "System.Boolean LaYumba.Functional.Option`1/<AsEnumerable>d__10::MoveNext()": {
          "Lines": {
            "39": 0,
            "40": 0,
            "41": 0
          },
          "Branches": [
            {
              "Line": 40,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 45,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.OptionExt": {
        "LaYumba.Functional.Option`1<R> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`2<T,R>>,LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0
          },
          "Branches": [
            {
              "Line": 71,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 71,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 73,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 73,
              "Offset": 25,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`2<T2,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`3<T1,T2,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "79": 0
          },
          "Branches": [
            {
              "Line": 79,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`3<T2,T3,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`4<T1,T2,T3,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "83": 0
          },
          "Branches": [
            {
              "Line": 83,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 83,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`4<T2,T3,T4,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`5<T1,T2,T3,T4,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "87": 0
          },
          "Branches": [
            {
              "Line": 87,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 87,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`5<T2,T3,T4,T5,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`6<T1,T2,T3,T4,T5,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "91": 0
          },
          "Branches": [
            {
              "Line": 91,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 91,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`6<T2,T3,T4,T5,T6,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`7<T1,T2,T3,T4,T5,T6,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "95": 0
          },
          "Branches": [
            {
              "Line": 95,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`7<T2,T3,T4,T5,T6,T7,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "99": 0
          },
          "Branches": [
            {
              "Line": 99,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 99,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`8<T2,T3,T4,T5,T6,T7,T8,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "103": 0
          },
          "Branches": [
            {
              "Line": 103,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 103,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R>> LaYumba.Functional.OptionExt::Apply(LaYumba.Functional.Option`1<System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>>,LaYumba.Functional.Option`1<T1>)": {
          "Lines": {
            "107": 0
          },
          "Branches": [
            {
              "Line": 107,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 107,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<R> LaYumba.Functional.OptionExt::Bind(LaYumba.Functional.Option`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>)": {
          "Lines": {
            "111": 0,
            "112": 0,
            "113": 0
          },
          "Branches": [
            {
              "Line": 111,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<R> LaYumba.Functional.OptionExt::Bind(LaYumba.Functional.Option`1<T>,System.Func`2<T,System.Collections.Generic.IEnumerable`1<R>>)": {
          "Lines": {
            "117": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<System.ValueTuple> LaYumba.Functional.OptionExt::ForEach(LaYumba.Functional.Option`1<T>,System.Action`1<T>)": {
          "Lines": {
            "120": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<R> LaYumba.Functional.OptionExt::Map(LaYumba.Functional.NoneType,System.Func`2<T,R>)": {
          "Lines": {
            "124": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<R> LaYumba.Functional.OptionExt::Map(LaYumba.Functional.Option`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "128": 0,
            "129": 0,
            "130": 0
          },
          "Branches": [
            {
              "Line": 128,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 128,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Func`2<T2,R>> LaYumba.Functional.OptionExt::Map(LaYumba.Functional.Option`1<T1>,System.Func`3<T1,T2,R>)": {
          "Lines": {
            "134": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<System.Func`3<T2,T3,R>> LaYumba.Functional.OptionExt::Map(LaYumba.Functional.Option`1<T1>,System.Func`4<T1,T2,T3,R>)": {
          "Lines": {
            "138": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Option`1<R>> LaYumba.Functional.OptionExt::Traverse(LaYumba.Functional.Option`1<T>,System.Func`2<T,System.Collections.Generic.IEnumerable`1<R>>)": {
          "Lines": {
            "142": 0,
            "143": 0,
            "144": 0
          },
          "Branches": [
            {
              "Line": 142,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 142,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 18,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple LaYumba.Functional.OptionExt::Match(LaYumba.Functional.Option`1<T>,System.Action,System.Action`1<T>)": {
          "Lines": {
            "149": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.OptionExt::IsSome(LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "152": 0,
            "153": 0,
            "154": 0
          },
          "Branches": [
            {
              "Line": 152,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 152,
              "Offset": 8,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 152,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 152,
              "Offset": 39,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "T LaYumba.Functional.OptionExt::ValueUnsafe(LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "157": 0,
            "158": 0,
            "159": 0
          },
          "Branches": [
            {
              "Line": 157,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 157,
              "Offset": 8,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 157,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 157,
              "Offset": 39,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "T LaYumba.Functional.OptionExt::GetOrElse(LaYumba.Functional.Option`1<T>,T)": {
          "Lines": {
            "162": 0,
            "163": 0,
            "164": 0
          },
          "Branches": [
            {
              "Line": 162,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 162,
              "Offset": 33,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "T LaYumba.Functional.OptionExt::GetOrElse(LaYumba.Functional.Option`1<T>,System.Func`1<T>)": {
          "Lines": {
            "167": 0,
            "168": 0,
            "169": 0
          },
          "Branches": [
            {
              "Line": 167,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 167,
              "Offset": 33,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<T> LaYumba.Functional.OptionExt::GetOrElse(LaYumba.Functional.Option`1<T>,System.Func`1<System.Threading.Tasks.Task`1<T>>)": {
          "Lines": {
            "172": 0,
            "173": 0,
            "174": 0
          },
          "Branches": [
            {
              "Line": 172,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 172,
              "Offset": 33,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.OptionExt::OrElse(LaYumba.Functional.Option`1<T>,LaYumba.Functional.Option`1<T>)": {
          "Lines": {
            "177": 0,
            "178": 0,
            "179": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.OptionExt::OrElse(LaYumba.Functional.Option`1<T>,System.Func`1<LaYumba.Functional.Option`1<T>>)": {
          "Lines": {
            "182": 0,
            "183": 0,
            "184": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.OptionExt::ToValidation(LaYumba.Functional.Option`1<T>,LaYumba.Functional.Error)": {
          "Lines": {
            "187": 0,
            "188": 0,
            "189": 0
          },
          "Branches": [
            {
              "Line": 187,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 187,
              "Offset": 33,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.OptionExt::ToValidation(LaYumba.Functional.Option`1<T>,System.Func`1<LaYumba.Functional.Error>)": {
          "Lines": {
            "192": 0,
            "193": 0,
            "194": 0
          },
          "Branches": [
            {
              "Line": 192,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 192,
              "Offset": 33,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<R> LaYumba.Functional.OptionExt::Select(LaYumba.Functional.Option`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "199": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.OptionExt::Where(LaYumba.Functional.Option`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "203": 0,
            "204": 0,
            "205": 0
          },
          "Branches": [
            {
              "Line": 203,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 203,
              "Offset": 32,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 205,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 205,
              "Offset": 12,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<RR> LaYumba.Functional.OptionExt::SelectMany(LaYumba.Functional.Option`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "209": 0,
            "210": 0,
            "211": 0,
            "212": 0,
            "213": 0
          },
          "Branches": [
            {
              "Line": 209,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 209,
              "Offset": 28,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 211,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 211,
              "Offset": 46,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\TaskExt.cs": {
      "LaYumba.Functional.F": {
        "System.Threading.Tasks.Task`1<T> LaYumba.Functional.F::Async(T)": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt": {
        "System.Threading.Tasks.Task`1<System.Func`2<T2,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`3<T1,T2,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "21": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`3<T2,T3,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`4<T1,T2,T3,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "25": 0
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`4<T2,T3,T4,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`5<T1,T2,T3,T4,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "29": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`5<T2,T3,T4,T5,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`6<T1,T2,T3,T4,T5,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "33": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`6<T2,T3,T4,T5,T6,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`7<T1,T2,T3,T4,T5,T6,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "37": 0
          },
          "Branches": [
            {
              "Line": 37,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`7<T2,T3,T4,T5,T6,T7,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "41": 0
          },
          "Branches": [
            {
              "Line": 41,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 41,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`8<T2,T3,T4,T5,T6,T7,T8,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "45": 0
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R>> LaYumba.Functional.TaskExt::Apply(System.Threading.Tasks.Task`1<System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>>,System.Threading.Tasks.Task`1<T1>)": {
          "Lines": {
            "49": 0
          },
          "Branches": [
            {
              "Line": 49,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.Func`2<T2,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`3<T1,T2,R>)": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Func`3<T2,T3,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`4<T1,T2,T3,R>)": {
          "Lines": {
            "69": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Func`4<T2,T3,T4,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`5<T1,T2,T3,T4,R>)": {
          "Lines": {
            "73": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Func`5<T2,T3,T4,T5,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`6<T1,T2,T3,T4,T5,R>)": {
          "Lines": {
            "77": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Func`6<T2,T3,T4,T5,T6,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`7<T1,T2,T3,T4,T5,T6,R>)": {
          "Lines": {
            "81": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Func`7<T2,T3,T4,T5,T6,T7,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>)": {
          "Lines": {
            "85": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Func`8<T2,T3,T4,T5,T6,T7,T8,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>)": {
          "Lines": {
            "89": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R>> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T1>,System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>)": {
          "Lines": {
            "93": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<R> LaYumba.Functional.TaskExt::Map(System.Threading.Tasks.Task`1<T>,System.Func`2<System.Exception,R>,System.Func`2<T,R>)": {
          "Lines": {
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0
          },
          "Branches": [
            {
              "Line": 98,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 98,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<System.ValueTuple> LaYumba.Functional.TaskExt::ForEach(System.Threading.Tasks.Task`1<T>,System.Action`1<T>)": {
          "Lines": {
            "103": 0,
            "104": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<T> LaYumba.Functional.TaskExt::OrElse(System.Threading.Tasks.Task`1<T>,System.Func`1<System.Threading.Tasks.Task`1<T>>)": {
          "Lines": {
            "114": 0,
            "115": 0,
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0
          },
          "Branches": [
            {
              "Line": 115,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 115,
              "Offset": 7,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<T> LaYumba.Functional.TaskExt::Recover(System.Threading.Tasks.Task`1<T>,System.Func`2<System.Exception,T>)": {
          "Lines": {
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0
          },
          "Branches": [
            {
              "Line": 125,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 7,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<T> LaYumba.Functional.TaskExt::RecoverWith(System.Threading.Tasks.Task`1<T>,System.Func`2<System.Exception,System.Threading.Tasks.Task`1<T>>)": {
          "Lines": {
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0
          },
          "Branches": [
            {
              "Line": 132,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 132,
              "Offset": 7,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.TaskExt/<>c__DisplayClass32_0`4": {
        "System.Boolean LaYumba.Functional.TaskExt/<>c__DisplayClass32_0`4::<GroupJoin>b__0(U)": {
          "Lines": {
            "196": 0,
            "197": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<Apply>d__0`2": {
        "System.Void LaYumba.Functional.TaskExt/<Apply>d__0`2::MoveNext()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<Bind>d__21`2": {
        "System.Void LaYumba.Functional.TaskExt/<Bind>d__21`2::MoveNext()": {
          "Lines": {
            "109": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<GroupJoin>d__32`4": {
        "System.Void LaYumba.Functional.TaskExt/<GroupJoin>d__32`4::MoveNext()": {
          "Lines": {
            "193": 0,
            "194": 0,
            "195": 0,
            "198": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<Join>d__31`4": {
        "System.Void LaYumba.Functional.TaskExt/<Join>d__31`4::MoveNext()": {
          "Lines": {
            "181": 0,
            "182": 0,
            "183": 0,
            "184": 0,
            "185": 0,
            "186": 0,
            "187": 0
          },
          "Branches": [
            {
              "Line": 183,
              "Offset": 195,
              "EndOffset": 197,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 183,
              "Offset": 195,
              "EndOffset": 203,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.TaskExt/<Map>d__10`1": {
        "System.Void LaYumba.Functional.TaskExt/<Map>d__10`1::MoveNext()": {
          "Lines": {
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<Map>d__9`2": {
        "System.Void LaYumba.Functional.TaskExt/<Map>d__9`2::MoveNext()": {
          "Lines": {
            "54": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<Select>d__29`2": {
        "System.Void LaYumba.Functional.TaskExt/<Select>d__29`2::MoveNext()": {
          "Lines": {
            "167": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<SelectMany>d__25`3": {
        "System.Void LaYumba.Functional.TaskExt/<SelectMany>d__25`3::MoveNext()": {
          "Lines": {
            "141": 0,
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<SelectMany>d__26`3": {
        "System.Void LaYumba.Functional.TaskExt/<SelectMany>d__26`3::MoveNext()": {
          "Lines": {
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<SelectMany>d__27`2": {
        "System.Void LaYumba.Functional.TaskExt/<SelectMany>d__27`2::MoveNext()": {
          "Lines": {
            "157": 0,
            "158": 0,
            "159": 0,
            "160": 0,
            "161": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<SelectMany>d__28`2": {
        "System.Void LaYumba.Functional.TaskExt/<SelectMany>d__28`2::MoveNext()": {
          "Lines": {
            "164": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TaskExt/<Where>d__30`1": {
        "System.Void LaYumba.Functional.TaskExt/<Where>d__30`1::MoveNext()": {
          "Lines": {
            "171": 0,
            "172": 0,
            "173": 0,
            "174": 0,
            "175": 0
          },
          "Branches": [
            {
              "Line": 173,
              "Offset": 164,
              "EndOffset": 166,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 173,
              "Offset": 164,
              "EndOffset": 172,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Try.cs": {
      "LaYumba.Functional.F": {
        "LaYumba.Functional.Try`1<T> LaYumba.Functional.F::Try(System.Func`1<T>)": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.TryExt": {
        "LaYumba.Functional.Exceptional`1<T> LaYumba.Functional.TryExt::Run(LaYumba.Functional.Try`1<T>)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Try`1<R> LaYumba.Functional.TryExt::Map(LaYumba.Functional.Try`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 20,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 52,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Try`1<System.Func`2<T2,R>> LaYumba.Functional.TryExt::Map(LaYumba.Functional.Try`1<T1>,System.Func`3<T1,T2,R>)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Try`1<R> LaYumba.Functional.TryExt::Bind(LaYumba.Functional.Try`1<T>,System.Func`2<T,LaYumba.Functional.Try`1<R>>)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 20,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 52,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Try`1<R> LaYumba.Functional.TryExt::Select(LaYumba.Functional.Try`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "41": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Try`1<RR> LaYumba.Functional.TryExt::SelectMany(LaYumba.Functional.Try`1<T>,System.Func`2<T,LaYumba.Functional.Try`1<R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0
          },
          "Branches": [
            {
              "Line": 46,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 20,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 52,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 51,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 51,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Validation.cs": {
      "LaYumba.Functional.F": {
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.F::Valid(T)": {
          "Lines": {
            "10": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 8,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation/Invalid LaYumba.Functional.F::Invalid(LaYumba.Functional.Error[])": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.F::Invalid(LaYumba.Functional.Error[])": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation/Invalid LaYumba.Functional.F::Invalid(System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error>)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.F::Invalid(System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error>)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Validation`1": {
        "System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error> LaYumba.Functional.Validation`1::get_Errors()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "T LaYumba.Functional.Validation`1::get_Value()": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Validation`1::get_IsValid()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.Validation`1::Fail(System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error>)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.Validation`1::Fail(LaYumba.Functional.Error[])": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.Validation`1::op_Implicit(LaYumba.Functional.Error)": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.Validation`1::op_Implicit(LaYumba.Functional.Validation/Invalid)": {
          "Lines": {
            "41": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.Validation`1::op_Implicit(T)": {
          "Lines": {
            "42": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.Validation`1::Match(System.Func`2<System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error>,R>,System.Func`2<T,R>)": {
          "Lines": {
            "45": 0
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 6,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple LaYumba.Functional.Validation`1::Match(System.Action`1<System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error>>,System.Action`1<T>)": {
          "Lines": {
            "48": 0
          },
          "Branches": []
        },
        "System.String LaYumba.Functional.Validation`1::ToString()": {
          "Lines": {
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": [
            {
              "Line": 56,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 56,
              "Offset": 6,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean LaYumba.Functional.Validation`1::Equals(System.Object)": {
          "Lines": {
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0
          },
          "Branches": [
            {
              "Line": 61,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 36,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 70,
              "EndOffset": 72,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 70,
              "EndOffset": 104,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 6,
              "EndOffset": 107,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 28,
              "EndOffset": 107,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Int32 LaYumba.Functional.Validation`1::GetHashCode()": {
          "Lines": {
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0
          },
          "Branches": [
            {
              "Line": 66,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 66,
              "Offset": 7,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 66,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 66,
              "Offset": 38,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Validation`1::.ctor(System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error>)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.Validation`1::.ctor(T)": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Validation`1/<AsEnumerable>d__18": {
        "System.Boolean LaYumba.Functional.Validation`1/<AsEnumerable>d__18::MoveNext()": {
          "Lines": {
            "51": 0,
            "52": 0,
            "53": 0
          },
          "Branches": [
            {
              "Line": 52,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 52,
              "Offset": 45,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.Validation": {
        "T LaYumba.Functional.Validation::GetOrElse(LaYumba.Functional.Validation`1<T>,T)": {
          "Lines": {
            "82": 0,
            "83": 0,
            "84": 0
          },
          "Branches": [
            {
              "Line": 82,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 82,
              "Offset": 33,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "T LaYumba.Functional.Validation::GetOrElse(LaYumba.Functional.Validation`1<T>,System.Func`1<T>)": {
          "Lines": {
            "87": 0,
            "88": 0,
            "89": 0
          },
          "Branches": [
            {
              "Line": 87,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 87,
              "Offset": 33,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<R> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`2<T,R>>,LaYumba.Functional.Validation`1<T>)": {
          "Lines": {
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0
          },
          "Branches": [
            {
              "Line": 93,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 25,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`2<T2,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`3<T1,T2,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "103": 0
          },
          "Branches": [
            {
              "Line": 103,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 103,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`3<T2,T3,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`4<T1,T2,T3,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "107": 0
          },
          "Branches": [
            {
              "Line": 107,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 107,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`4<T2,T3,T4,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`5<T1,T2,T3,T4,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "111": 0
          },
          "Branches": [
            {
              "Line": 111,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`5<T2,T3,T4,T5,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`6<T1,T2,T3,T4,T5,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "115": 0
          },
          "Branches": [
            {
              "Line": 115,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 115,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`6<T2,T3,T4,T5,T6,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`7<T1,T2,T3,T4,T5,T6,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "119": 0
          },
          "Branches": [
            {
              "Line": 119,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`7<T2,T3,T4,T5,T6,T7,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "123": 0
          },
          "Branches": [
            {
              "Line": 123,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 123,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`8<T2,T3,T4,T5,T6,T7,T8,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "127": 0
          },
          "Branches": [
            {
              "Line": 127,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R>> LaYumba.Functional.Validation::Apply(LaYumba.Functional.Validation`1<System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>>,LaYumba.Functional.Validation`1<T1>)": {
          "Lines": {
            "131": 0
          },
          "Branches": [
            {
              "Line": 131,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 131,
              "Offset": 7,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<R> LaYumba.Functional.Validation::Map(LaYumba.Functional.Validation`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0
          },
          "Branches": [
            {
              "Line": 135,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 135,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Func`2<T2,R>> LaYumba.Functional.Validation::Map(LaYumba.Functional.Validation`1<T1>,System.Func`3<T1,T2,R>)": {
          "Lines": {
            "143": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<System.ValueTuple> LaYumba.Functional.Validation::ForEach(LaYumba.Functional.Validation`1<R>,System.Action`1<R>)": {
          "Lines": {
            "147": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<T> LaYumba.Functional.Validation::Do(LaYumba.Functional.Validation`1<T>,System.Action`1<T>)": {
          "Lines": {
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<R> LaYumba.Functional.Validation::Bind(LaYumba.Functional.Validation`1<T>,System.Func`2<T,LaYumba.Functional.Validation`1<R>>)": {
          "Lines": {
            "158": 0,
            "159": 0,
            "160": 0
          },
          "Branches": [
            {
              "Line": 158,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 158,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<R> LaYumba.Functional.Validation::Select(LaYumba.Functional.Validation`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "166": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<RR> LaYumba.Functional.Validation::SelectMany(LaYumba.Functional.Validation`1<T>,System.Func`2<T,LaYumba.Functional.Validation`1<R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "170": 0,
            "171": 0,
            "172": 0,
            "173": 0,
            "174": 0
          },
          "Branches": [
            {
              "Line": 170,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 170,
              "Offset": 28,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 172,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 172,
              "Offset": 46,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.Validation/Invalid": {
        "System.Void LaYumba.Functional.Validation/Invalid::.ctor(System.Collections.Generic.IEnumerable`1<LaYumba.Functional.Error>)": {
          "Lines": {
            "78": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\EmptyList.cs": {
      "LaYumba.Functional.EmptyList`1/<System-Collections-Generic-IEnumerable<T>-GetEnumerator>d__1": {
        "System.Boolean LaYumba.Functional.EmptyList`1/<System-Collections-Generic-IEnumerable<T>-GetEnumerator>d__1::MoveNext()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.EmptyList`1/<System-Collections-IEnumerable-GetEnumerator>d__0": {
        "System.Boolean LaYumba.Functional.EmptyList`1/<System-Collections-IEnumerable-GetEnumerator>d__0::MoveNext()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Enum.cs": {
      "LaYumba.Functional.Enum": {
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.Enum::Parse(System.String)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Free.cs": {
      "LaYumba.Functional.Done`1": {
        "T LaYumba.Functional.Done`1::get_Value()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.Done`1::Match(System.Func`2<T,R>,System.Func`2<LaYumba.Functional.Coyo`2<System.Object,LaYumba.Functional.Free`1<T>>,R>)": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.Done`1::.ctor(T)": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.More`1": {
        "LaYumba.Functional.Coyo`2<System.Object,LaYumba.Functional.Free`1<T>> LaYumba.Functional.More`1::get_Next()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "R LaYumba.Functional.More`1::Match(System.Func`2<T,R>,System.Func`2<LaYumba.Functional.Coyo`2<System.Object,LaYumba.Functional.Free`1<T>>,R>)": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.More`1::.ctor(LaYumba.Functional.Coyo`2<System.Object,LaYumba.Functional.Free`1<T>>)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Free": {
        "LaYumba.Functional.Free`1<T> LaYumba.Functional.Free::Return(T)": {
          "Lines": {
            "37": 0
          },
          "Branches": []
        },
        "T LaYumba.Functional.Free::Run(LaYumba.Functional.Free`1<T>,System.Func`2<System.Object,System.Object>)": {
          "Lines": {
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 20,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<T> LaYumba.Functional.Free::Run(LaYumba.Functional.Free`1<T>,System.Func`2<System.Object,System.Threading.Tasks.Task`1<System.Object>>)": {
          "Lines": {
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 20,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Free`1<T> LaYumba.Functional.Free::Of(System.Object)": {
          "Lines": {
            "78": 0
          },
          "Branches": [
            {
              "Line": 78,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 12,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Free`1<T> LaYumba.Functional.Free::Done(T)": {
          "Lines": {
            "80": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Free`1<T> LaYumba.Functional.Free::More(LaYumba.Functional.Coyo`2<System.Object,LaYumba.Functional.Free`1<T>>)": {
          "Lines": {
            "81": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Free`1<R> LaYumba.Functional.Free::Select(LaYumba.Functional.Free`1<T>,System.Func`2<T,R>)": {
          "Lines": {
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0
          },
          "Branches": [
            {
              "Line": 93,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 8,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Free`1<R> LaYumba.Functional.Free::SelectMany(LaYumba.Functional.Free`1<T>,System.Func`2<T,LaYumba.Functional.Free`1<R>>)": {
          "Lines": {
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0
          },
          "Branches": [
            {
              "Line": 100,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 8,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Free`1<RR> LaYumba.Functional.Free::SelectMany(LaYumba.Functional.Free`1<T>,System.Func`2<T,LaYumba.Functional.Free`1<R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "105": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\FuncExt.cs": {
      "LaYumba.Functional.FuncExt": {
        "System.Func`1<T> LaYumba.Functional.FuncExt::ToNullary(System.Func`2<System.ValueTuple,T>)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "System.Func`2<T1,R> LaYumba.Functional.FuncExt::Compose(System.Func`2<T2,R>,System.Func`2<T1,T2>)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Func`2<T,System.Boolean> LaYumba.Functional.FuncExt::Negate(System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Func`2<T2,R> LaYumba.Functional.FuncExt::Apply(System.Func`3<T1,T2,R>,T1)": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Func`3<T2,T3,R> LaYumba.Functional.FuncExt::Apply(System.Func`4<T1,T2,T3,R>,T1)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Func`4<T2,T3,T4,R> LaYumba.Functional.FuncExt::Apply(System.Func`5<T1,T2,T3,T4,R>,T1)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Func`5<T2,T3,T4,T5,R> LaYumba.Functional.FuncExt::Apply(System.Func`6<T1,T2,T3,T4,T5,R>,T1)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Func`6<T2,T3,T4,T5,T6,R> LaYumba.Functional.FuncExt::Apply(System.Func`7<T1,T2,T3,T4,T5,T6,R>,T1)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.Func`7<T2,T3,T4,T5,T6,T7,R> LaYumba.Functional.FuncExt::Apply(System.Func`8<T1,T2,T3,T4,T5,T6,T7,R>,T1)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "System.Func`8<T2,T3,T4,T5,T6,T7,T8,R> LaYumba.Functional.FuncExt::Apply(System.Func`9<T1,T2,T3,T4,T5,T6,T7,T8,R>,T1)": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        },
        "System.Func`9<T2,T3,T4,T5,T6,T7,T8,T9,R> LaYumba.Functional.FuncExt::Apply(System.Func`10<T1,T2,T3,T4,T5,T6,T7,T8,T9,R>,T1)": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "System.Func`3<I1,I2,R> LaYumba.Functional.FuncExt::Map(System.Func`3<I1,I2,T>,System.Func`2<T,R>)": {
          "Lines": {
            "42": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.FuncTRExt": {
        "System.Func`2<Env,R> LaYumba.Functional.FuncTRExt::Map(System.Func`2<Env,T>,System.Func`2<T,R>)": {
          "Lines": {
            "51": 0
          },
          "Branches": []
        },
        "System.Func`2<Env,R> LaYumba.Functional.FuncTRExt::Bind(System.Func`2<Env,T>,System.Func`2<T,System.Func`2<Env,R>>)": {
          "Lines": {
            "55": 0
          },
          "Branches": []
        },
        "System.Func`2<Env,R> LaYumba.Functional.FuncTRExt::Bind(System.Func`2<Env,T>,System.Func`3<T,Env,R>)": {
          "Lines": {
            "60": 0
          },
          "Branches": []
        },
        "System.Func`2<Env,R> LaYumba.Functional.FuncTRExt::Select(System.Func`2<Env,T>,System.Func`2<T,R>)": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        },
        "System.Func`2<Env,P> LaYumba.Functional.FuncTRExt::SelectMany(System.Func`2<Env,T>,System.Func`2<T,System.Func`2<Env,R>>,System.Func`3<T,R,P>)": {
          "Lines": {
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Int.cs": {
      "LaYumba.Functional.Int": {
        "LaYumba.Functional.Option`1<System.Int32> LaYumba.Functional.Int::Parse(System.String)": {
          "Lines": {
            "8": 0,
            "9": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 8,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean LaYumba.Functional.Int::IsOdd(System.Int32)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Boolean LaYumba.Functional.Int::IsEven(System.Int32)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Long.cs": {
      "LaYumba.Functional.Long": {
        "LaYumba.Functional.Option`1<System.Int64> LaYumba.Functional.Long::Parse(System.String)": {
          "Lines": {
            "8": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Nullable.cs": {
      "LaYumba.Functional.NullableExt": {
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.NullableExt::ToOption(System.Nullable`1<T>)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 7,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\ObservableExt.cs": {
      "LaYumba.Functional.ObservableExt": {
        "System.ValueTuple`2<System.IObservable`1<R>,System.IObservable`1<System.Exception>> LaYumba.Functional.ObservableExt::Safely(System.IObservable`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<R>>)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 28,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 59,
              "EndOffset": 61,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 59,
              "EndOffset": 84,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple`2<System.IObservable`1<T>,System.IObservable`1<System.Exception>> LaYumba.Functional.ObservableExt::Partition(System.IObservable`1<LaYumba.Functional.Exceptional`1<T>>)": {
          "Lines": {
            "24": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.IObservable`1<T>,System.IObservable`1<T>> LaYumba.Functional.ObservableExt::Partition(System.IObservable`1<T>,System.Func`2<T,System.Boolean>)": {
          "Lines": {
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.IObservable`1<RTrue>,System.IObservable`1<RFalse>> LaYumba.Functional.ObservableExt::Partition(System.IObservable`1<T>,System.Func`2<T,System.Boolean>,System.Func`2<T,RTrue>,System.Func`2<T,RFalse>)": {
          "Lines": {
            "58": 0,
            "59": 0
          },
          "Branches": []
        },
        "System.IObservable`1<System.ValueTuple`2<T,T>> LaYumba.Functional.ObservableExt::PairWithPrevious(System.IObservable`1<T>)": {
          "Lines": {
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0
          },
          "Branches": [
            {
              "Line": 63,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 30,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean LaYumba.Functional.ObservableExt::<Partition>g__IsSuccess|1_0(LaYumba.Functional.Exceptional`1<T>)": {
          "Lines": {
            "26": 0
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 8,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 39,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "T LaYumba.Functional.ObservableExt::<Partition>g__ExtractValue|1_1(LaYumba.Functional.Exceptional`1<T>)": {
          "Lines": {
            "29": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 8,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 39,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Exception LaYumba.Functional.ObservableExt::<Partition>g__ExtractException|1_2(LaYumba.Functional.Exceptional`1<T>)": {
          "Lines": {
            "32": 0
          },
          "Branches": [
            {
              "Line": 32,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 8,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 39,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Reader.cs": {
      "LaYumba.Functional.Reader": {
        "LaYumba.Functional.Reader`2<Env,R> LaYumba.Functional.Reader::Map(LaYumba.Functional.Reader`2<Env,T>,System.Func`2<T,R>)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Reader`2<Env,R> LaYumba.Functional.Reader::Bind(LaYumba.Functional.Reader`2<Env,T>,System.Func`2<T,LaYumba.Functional.Reader`2<Env,R>>)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Reader`2<Env,R> LaYumba.Functional.Reader::Bind(LaYumba.Functional.Reader`2<Env,T>,System.Func`3<T,Env,R>)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Reader`2<Env,Env> LaYumba.Functional.Reader::Ask()": {
          "Lines": {
            "23": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 6,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Reader`2<Env,R> LaYumba.Functional.Reader::Select(LaYumba.Functional.Reader`2<Env,T>,System.Func`2<T,R>)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Reader`2<Env,RR> LaYumba.Functional.Reader::SelectMany(LaYumba.Functional.Reader`2<Env,T>,System.Func`2<T,LaYumba.Functional.Reader`2<Env,R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\StatefulComputation.cs": {
      "LaYumba.Functional.StatefulComputation`1": {
        "LaYumba.Functional.StatefulComputation`2<S,T> LaYumba.Functional.StatefulComputation`1::Return(T)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.StatefulComputation`2<S,System.ValueTuple> LaYumba.Functional.StatefulComputation`1::Put(S)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.StatefulComputation`2<S,S> LaYumba.Functional.StatefulComputation`1::get_Get()": {
          "Lines": {
            "18": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 6,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.StatefulComputation": {
        "T LaYumba.Functional.StatefulComputation::Run(LaYumba.Functional.StatefulComputation`2<S,T>,S)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.StatefulComputation`2<S,System.ValueTuple> LaYumba.Functional.StatefulComputation::Put(S)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.StatefulComputation`2<S,S> LaYumba.Functional.StatefulComputation::Get()": {
          "Lines": {
            "30": 0
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 6,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.StatefulComputation`2<S,R> LaYumba.Functional.StatefulComputation::Select(LaYumba.Functional.StatefulComputation`2<S,T>,System.Func`2<T,R>)": {
          "Lines": {
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.StatefulComputation`2<S,R> LaYumba.Functional.StatefulComputation::SelectMany(LaYumba.Functional.StatefulComputation`2<S,T>,System.Func`2<T,LaYumba.Functional.StatefulComputation`2<S,R>>)": {
          "Lines": {
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.StatefulComputation`2<S,RR> LaYumba.Functional.StatefulComputation::SelectMany(LaYumba.Functional.StatefulComputation`2<S,T>,System.Func`2<T,LaYumba.Functional.StatefulComputation`2<S,R>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\String.cs": {
      "LaYumba.Functional.String": {
        "System.ValueTuple`2<System.String,System.String> LaYumba.Functional.String::SplitAt(System.String,System.Int32)": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "System.Void LaYumba.Functional.String::.cctor()": {
          "Lines": {
            "5": 0,
            "6": 0,
            "7": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\TupleExt.cs": {
      "LaYumba.Functional.TupleExt": {
        "R LaYumba.Functional.TupleExt::Match(System.Tuple`2<T1,T2>,System.Func`3<T1,T2,R>)": {
          "Lines": {
            "6": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Traversable\\IEnumerable.cs": {
      "LaYumba.Functional.Traversable.IEnumerableTraversable": {
        "System.Collections.Generic.IEnumerable`1<T> LaYumba.Functional.Traversable.IEnumerableTraversable::Cons(T,System.Collections.Generic.IEnumerable`1<T>)": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.Func`3<T,System.Collections.Generic.IEnumerable`1<T>,System.Collections.Generic.IEnumerable`1<T>> LaYumba.Functional.Traversable.IEnumerableTraversable::Cons()": {
          "Lines": {
            "11": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 6,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Func`3<System.Collections.Generic.IEnumerable`1<T>,T,System.Collections.Generic.IEnumerable`1<T>> LaYumba.Functional.Traversable.IEnumerableTraversable::Append()": {
          "Lines": {
            "14": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 6,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Exceptional`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::Traverse(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Exceptional`1<R>>)": {
          "Lines": {
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 39,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseARec(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 32,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 20,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseA(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>)": {
          "Lines": {
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseMRec(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>)": {
          "Lines": {
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 20,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 52,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 52,
              "Offset": 50,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Option`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseM(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>)": {
          "Lines": {
            "57": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::Traverse(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Option`1<R>>)": {
          "Lines": {
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0
          },
          "Branches": [
            {
              "Line": 64,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 64,
              "Offset": 39,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseM(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Validation`1<R>>)": {
          "Lines": {
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0
          },
          "Branches": [
            {
              "Line": 78,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 39,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "LaYumba.Functional.Validation`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::Traverse(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Validation`1<R>>)": {
          "Lines": {
            "85": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Validation`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseA(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,LaYumba.Functional.Validation`1<R>>)": {
          "Lines": {
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseA(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<R>>)": {
          "Lines": {
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::Traverse(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<R>>)": {
          "Lines": {
            "107": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Collections.Generic.IEnumerable`1<R>> LaYumba.Functional.Traversable.IEnumerableTraversable::TraverseM(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<R>>)": {
          "Lines": {
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0,
            "116": 0,
            "117": 0
          },
          "Branches": [
            {
              "Line": 115,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 115,
              "Offset": 39,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Traversable\\Option.cs": {
      "LaYumba.Functional.Traversable.OptionTraversable": {
        "LaYumba.Functional.Exceptional`1<LaYumba.Functional.Option`1<R>> LaYumba.Functional.Traversable.OptionTraversable::Traverse(LaYumba.Functional.Option`1<T>,System.Func`2<T,LaYumba.Functional.Exceptional`1<R>>)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 18,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<R>> LaYumba.Functional.Traversable.OptionTraversable::Traverse(LaYumba.Functional.Option`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<R>>)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 18,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<R>> LaYumba.Functional.Traversable.OptionTraversable::TraverseBind(LaYumba.Functional.Option`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<R>>>)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Traversable\\Validation.cs": {
      "LaYumba.Functional.Traversable.ValidationTraversable": {
        "LaYumba.Functional.Exceptional`1<LaYumba.Functional.Validation`1<R>> LaYumba.Functional.Traversable.ValidationTraversable::Traverse(LaYumba.Functional.Validation`1<T>,System.Func`2<T,LaYumba.Functional.Exceptional`1<R>>)": {
          "Lines": {
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 18,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<R>> LaYumba.Functional.Traversable.ValidationTraversable::Traverse(LaYumba.Functional.Validation`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<R>>)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 18,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<R>> LaYumba.Functional.Traversable.ValidationTraversable::TraverseBind(LaYumba.Functional.Validation`1<T>,System.Func`2<T,System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<R>>>)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "LaYumba.Functional.Traversable.TaskTraversable": {
        "LaYumba.Functional.Validation`1<System.Threading.Tasks.Task`1<R>> LaYumba.Functional.Traversable.TaskTraversable::Traverse(System.Threading.Tasks.Task`1<T>,System.Func`2<T,LaYumba.Functional.Validation`1<R>>)": {
          "Lines": {
            "35": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Traversable.ExceptionalTraversable": {
        "LaYumba.Functional.Validation`1<LaYumba.Functional.Exceptional`1<R>> LaYumba.Functional.Traversable.ExceptionalTraversable::Traverse(LaYumba.Functional.Exceptional`1<T>,System.Func`2<T,LaYumba.Functional.Validation`1<R>>)": {
          "Lines": {
            "42": 0,
            "43": 0,
            "44": 0
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 18,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\Serialization\\Json.cs": {
      "LaYumba.Functional.Serialization.OptionConverter": {
        "System.Boolean LaYumba.Functional.Serialization.OptionConverter::CanConvert(System.Type)": {
          "Lines": {
            "42": 0,
            "43": 0
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 6,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Text.Json.Serialization.JsonConverter LaYumba.Functional.Serialization.OptionConverter::CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)": {
          "Lines": {
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": []
        }
      },
      "LaYumba.Functional.Serialization.OptionConverter/OptionConverterInner`1": {
        "System.Boolean LaYumba.Functional.Serialization.OptionConverter/OptionConverterInner`1::get_HandleNull()": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        },
        "LaYumba.Functional.Option`1<T> LaYumba.Functional.Serialization.OptionConverter/OptionConverterInner`1::Read(System.Text.Json.Utf8JsonReader&,System.Type,System.Text.Json.JsonSerializerOptions)": {
          "Lines": {
            "82": 0,
            "84": 0,
            "85": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "92": 0,
            "93": 0
          },
          "Branches": [
            {
              "Line": 84,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 84,
              "Offset": 13,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 37,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 76,
              "EndOffset": 78,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 76,
              "EndOffset": 154,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Serialization.OptionConverter/OptionConverterInner`1::Write(System.Text.Json.Utf8JsonWriter,LaYumba.Functional.Option`1<T>,System.Text.Json.JsonSerializerOptions)": {
          "Lines": {
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0
          },
          "Branches": [
            {
              "Line": 106,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 17,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void LaYumba.Functional.Serialization.OptionConverter/OptionConverterInner`1::.ctor(System.Text.Json.JsonSerializerOptions)": {
          "Lines": {
            "67": 0,
            "68": 0,
            "72": 0,
            "75": 0,
            "76": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\MonadStacks\\TaskOptionMonad.cs": {
      "LaYumba.Functional.MonadStacks.TaskOptionMonad": {
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<T>> LaYumba.Functional.MonadStacks.TaskOptionMonad::OrElse(System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<T>>,System.Func`1<System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<T>>>)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 25,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<U>> LaYumba.Functional.MonadStacks.TaskOptionMonad::Select(System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<T>>,System.Func`2<T,U>)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<R>> LaYumba.Functional.MonadStacks.TaskOptionMonad::SelectMany(System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<T>>,System.Func`2<T,System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<R>>>)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<RR>> LaYumba.Functional.MonadStacks.TaskOptionMonad::SelectMany(System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<T>>,System.Func`2<T,System.Threading.Tasks.Task`1<LaYumba.Functional.Option`1<R>>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": [
            {
              "Line": 36,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 8,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Data\\MyGitHubRepos\\FunctionalCSharpSolution\\LaYumba.Functional\\MonadStacks\\TaskValidationMonad.cs": {
      "LaYumba.Functional.MonadStacks.TaskValidationMonad": {
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<U>> LaYumba.Functional.MonadStacks.TaskValidationMonad::Select(System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<T>>,System.Func`2<T,U>)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<R>> LaYumba.Functional.MonadStacks.TaskValidationMonad::SelectMany(System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<T>>,System.Func`2<T,System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<R>>>)": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<RR>> LaYumba.Functional.MonadStacks.TaskValidationMonad::SelectMany(System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<T>>,System.Func`2<T,System.Threading.Tasks.Task`1<LaYumba.Functional.Validation`1<R>>>,System.Func`3<T,R,RR>)": {
          "Lines": {
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": [
            {
              "Line": 37,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 8,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    }
  }
}